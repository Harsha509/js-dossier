// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: expression.proto

package com.github.jsdossier.proto;

/**
 * Protobuf type {@code dossier.expression.TypeExpression}
 */
public  final class TypeExpression extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:dossier.expression.TypeExpression)
    TypeExpressionOrBuilder {
  // Use TypeExpression.newBuilder() to construct.
  private TypeExpression(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private TypeExpression() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private TypeExpression(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            modifierCase_ = 1;
            modifier_ = input.readBool();
            break;
          }
          case 16: {
            modifierCase_ = 2;
            modifier_ = input.readBool();
            break;
          }
          case 26: {
            com.github.jsdossier.proto.FunctionType.Builder subBuilder = null;
            if (nodeTypeCase_ == 3) {
              subBuilder = ((com.github.jsdossier.proto.FunctionType) nodeType_).toBuilder();
            }
            nodeType_ =
                input.readMessage(com.github.jsdossier.proto.FunctionType.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.github.jsdossier.proto.FunctionType) nodeType_);
              nodeType_ = subBuilder.buildPartial();
            }
            nodeTypeCase_ = 3;
            break;
          }
          case 34: {
            com.github.jsdossier.proto.NamedType.Builder subBuilder = null;
            if (nodeTypeCase_ == 4) {
              subBuilder = ((com.github.jsdossier.proto.NamedType) nodeType_).toBuilder();
            }
            nodeType_ =
                input.readMessage(com.github.jsdossier.proto.NamedType.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.github.jsdossier.proto.NamedType) nodeType_);
              nodeType_ = subBuilder.buildPartial();
            }
            nodeTypeCase_ = 4;
            break;
          }
          case 42: {
            com.github.jsdossier.proto.RecordType.Builder subBuilder = null;
            if (nodeTypeCase_ == 5) {
              subBuilder = ((com.github.jsdossier.proto.RecordType) nodeType_).toBuilder();
            }
            nodeType_ =
                input.readMessage(com.github.jsdossier.proto.RecordType.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.github.jsdossier.proto.RecordType) nodeType_);
              nodeType_ = subBuilder.buildPartial();
            }
            nodeTypeCase_ = 5;
            break;
          }
          case 50: {
            com.github.jsdossier.proto.UnionType.Builder subBuilder = null;
            if (nodeTypeCase_ == 6) {
              subBuilder = ((com.github.jsdossier.proto.UnionType) nodeType_).toBuilder();
            }
            nodeType_ =
                input.readMessage(com.github.jsdossier.proto.UnionType.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.github.jsdossier.proto.UnionType) nodeType_);
              nodeType_ = subBuilder.buildPartial();
            }
            nodeTypeCase_ = 6;
            break;
          }
          case 56: {
            nodeTypeCase_ = 7;
            nodeType_ = input.readBool();
            break;
          }
          case 64: {
            nodeTypeCase_ = 8;
            nodeType_ = input.readBool();
            break;
          }
          case 72: {
            nodeTypeCase_ = 9;
            nodeType_ = input.readBool();
            break;
          }
          case 80: {
            nodeTypeCase_ = 10;
            nodeType_ = input.readBool();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw new RuntimeException(e.setUnfinishedMessage(this));
    } catch (java.io.IOException e) {
      throw new RuntimeException(
          new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this));
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.github.jsdossier.proto.Expression.internal_static_dossier_expression_TypeExpression_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.github.jsdossier.proto.Expression.internal_static_dossier_expression_TypeExpression_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.github.jsdossier.proto.TypeExpression.class, com.github.jsdossier.proto.TypeExpression.Builder.class);
  }

  private int modifierCase_ = 0;
  private java.lang.Object modifier_;
  public enum ModifierCase
      implements com.google.protobuf.Internal.EnumLite {
    IS_OPTIONAL(1),
    IS_VARARGS(2),
    MODIFIER_NOT_SET(0);
    private int value = 0;
    private ModifierCase(int value) {
      this.value = value;
    }
    public static ModifierCase valueOf(int value) {
      switch (value) {
        case 1: return IS_OPTIONAL;
        case 2: return IS_VARARGS;
        case 0: return MODIFIER_NOT_SET;
        default: throw new java.lang.IllegalArgumentException(
          "Value is undefined for this oneof enum.");
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ModifierCase
  getModifierCase() {
    return ModifierCase.valueOf(
        modifierCase_);
  }

  private int nodeTypeCase_ = 0;
  private java.lang.Object nodeType_;
  public enum NodeTypeCase
      implements com.google.protobuf.Internal.EnumLite {
    FUNCTION_TYPE(3),
    NAMED_TYPE(4),
    RECORD_TYPE(5),
    UNION_TYPE(6),
    ANY_TYPE(7),
    UNKNOWN_TYPE(8),
    VOID_TYPE(9),
    NULL_TYPE(10),
    NODETYPE_NOT_SET(0);
    private int value = 0;
    private NodeTypeCase(int value) {
      this.value = value;
    }
    public static NodeTypeCase valueOf(int value) {
      switch (value) {
        case 3: return FUNCTION_TYPE;
        case 4: return NAMED_TYPE;
        case 5: return RECORD_TYPE;
        case 6: return UNION_TYPE;
        case 7: return ANY_TYPE;
        case 8: return UNKNOWN_TYPE;
        case 9: return VOID_TYPE;
        case 10: return NULL_TYPE;
        case 0: return NODETYPE_NOT_SET;
        default: throw new java.lang.IllegalArgumentException(
          "Value is undefined for this oneof enum.");
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public NodeTypeCase
  getNodeTypeCase() {
    return NodeTypeCase.valueOf(
        nodeTypeCase_);
  }

  public static final int IS_OPTIONAL_FIELD_NUMBER = 1;
  /**
   * <code>optional bool is_optional = 1;</code>
   */
  public boolean getIsOptional() {
    if (modifierCase_ == 1) {
      return (java.lang.Boolean) modifier_;
    }
    return false;
  }

  public static final int IS_VARARGS_FIELD_NUMBER = 2;
  /**
   * <code>optional bool is_varargs = 2;</code>
   */
  public boolean getIsVarargs() {
    if (modifierCase_ == 2) {
      return (java.lang.Boolean) modifier_;
    }
    return false;
  }

  public static final int FUNCTION_TYPE_FIELD_NUMBER = 3;
  /**
   * <code>optional .dossier.expression.FunctionType function_type = 3;</code>
   */
  public com.github.jsdossier.proto.FunctionType getFunctionType() {
    if (nodeTypeCase_ == 3) {
       return (com.github.jsdossier.proto.FunctionType) nodeType_;
    }
    return com.github.jsdossier.proto.FunctionType.getDefaultInstance();
  }
  /**
   * <code>optional .dossier.expression.FunctionType function_type = 3;</code>
   */
  public com.github.jsdossier.proto.FunctionTypeOrBuilder getFunctionTypeOrBuilder() {
    if (nodeTypeCase_ == 3) {
       return (com.github.jsdossier.proto.FunctionType) nodeType_;
    }
    return com.github.jsdossier.proto.FunctionType.getDefaultInstance();
  }

  public static final int NAMED_TYPE_FIELD_NUMBER = 4;
  /**
   * <code>optional .dossier.expression.NamedType named_type = 4;</code>
   */
  public com.github.jsdossier.proto.NamedType getNamedType() {
    if (nodeTypeCase_ == 4) {
       return (com.github.jsdossier.proto.NamedType) nodeType_;
    }
    return com.github.jsdossier.proto.NamedType.getDefaultInstance();
  }
  /**
   * <code>optional .dossier.expression.NamedType named_type = 4;</code>
   */
  public com.github.jsdossier.proto.NamedTypeOrBuilder getNamedTypeOrBuilder() {
    if (nodeTypeCase_ == 4) {
       return (com.github.jsdossier.proto.NamedType) nodeType_;
    }
    return com.github.jsdossier.proto.NamedType.getDefaultInstance();
  }

  public static final int RECORD_TYPE_FIELD_NUMBER = 5;
  /**
   * <code>optional .dossier.expression.RecordType record_type = 5;</code>
   */
  public com.github.jsdossier.proto.RecordType getRecordType() {
    if (nodeTypeCase_ == 5) {
       return (com.github.jsdossier.proto.RecordType) nodeType_;
    }
    return com.github.jsdossier.proto.RecordType.getDefaultInstance();
  }
  /**
   * <code>optional .dossier.expression.RecordType record_type = 5;</code>
   */
  public com.github.jsdossier.proto.RecordTypeOrBuilder getRecordTypeOrBuilder() {
    if (nodeTypeCase_ == 5) {
       return (com.github.jsdossier.proto.RecordType) nodeType_;
    }
    return com.github.jsdossier.proto.RecordType.getDefaultInstance();
  }

  public static final int UNION_TYPE_FIELD_NUMBER = 6;
  /**
   * <code>optional .dossier.expression.UnionType union_type = 6;</code>
   */
  public com.github.jsdossier.proto.UnionType getUnionType() {
    if (nodeTypeCase_ == 6) {
       return (com.github.jsdossier.proto.UnionType) nodeType_;
    }
    return com.github.jsdossier.proto.UnionType.getDefaultInstance();
  }
  /**
   * <code>optional .dossier.expression.UnionType union_type = 6;</code>
   */
  public com.github.jsdossier.proto.UnionTypeOrBuilder getUnionTypeOrBuilder() {
    if (nodeTypeCase_ == 6) {
       return (com.github.jsdossier.proto.UnionType) nodeType_;
    }
    return com.github.jsdossier.proto.UnionType.getDefaultInstance();
  }

  public static final int ANY_TYPE_FIELD_NUMBER = 7;
  /**
   * <code>optional bool any_type = 7;</code>
   */
  public boolean getAnyType() {
    if (nodeTypeCase_ == 7) {
      return (java.lang.Boolean) nodeType_;
    }
    return false;
  }

  public static final int UNKNOWN_TYPE_FIELD_NUMBER = 8;
  /**
   * <code>optional bool unknown_type = 8;</code>
   */
  public boolean getUnknownType() {
    if (nodeTypeCase_ == 8) {
      return (java.lang.Boolean) nodeType_;
    }
    return false;
  }

  public static final int VOID_TYPE_FIELD_NUMBER = 9;
  /**
   * <code>optional bool void_type = 9;</code>
   */
  public boolean getVoidType() {
    if (nodeTypeCase_ == 9) {
      return (java.lang.Boolean) nodeType_;
    }
    return false;
  }

  public static final int NULL_TYPE_FIELD_NUMBER = 10;
  /**
   * <code>optional bool null_type = 10;</code>
   */
  public boolean getNullType() {
    if (nodeTypeCase_ == 10) {
      return (java.lang.Boolean) nodeType_;
    }
    return false;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (modifierCase_ == 1) {
      output.writeBool(
          1, (boolean)((java.lang.Boolean) modifier_));
    }
    if (modifierCase_ == 2) {
      output.writeBool(
          2, (boolean)((java.lang.Boolean) modifier_));
    }
    if (nodeTypeCase_ == 3) {
      output.writeMessage(3, (com.github.jsdossier.proto.FunctionType) nodeType_);
    }
    if (nodeTypeCase_ == 4) {
      output.writeMessage(4, (com.github.jsdossier.proto.NamedType) nodeType_);
    }
    if (nodeTypeCase_ == 5) {
      output.writeMessage(5, (com.github.jsdossier.proto.RecordType) nodeType_);
    }
    if (nodeTypeCase_ == 6) {
      output.writeMessage(6, (com.github.jsdossier.proto.UnionType) nodeType_);
    }
    if (nodeTypeCase_ == 7) {
      output.writeBool(
          7, (boolean)((java.lang.Boolean) nodeType_));
    }
    if (nodeTypeCase_ == 8) {
      output.writeBool(
          8, (boolean)((java.lang.Boolean) nodeType_));
    }
    if (nodeTypeCase_ == 9) {
      output.writeBool(
          9, (boolean)((java.lang.Boolean) nodeType_));
    }
    if (nodeTypeCase_ == 10) {
      output.writeBool(
          10, (boolean)((java.lang.Boolean) nodeType_));
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (modifierCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(
            1, (boolean)((java.lang.Boolean) modifier_));
    }
    if (modifierCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(
            2, (boolean)((java.lang.Boolean) modifier_));
    }
    if (nodeTypeCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (com.github.jsdossier.proto.FunctionType) nodeType_);
    }
    if (nodeTypeCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (com.github.jsdossier.proto.NamedType) nodeType_);
    }
    if (nodeTypeCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (com.github.jsdossier.proto.RecordType) nodeType_);
    }
    if (nodeTypeCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, (com.github.jsdossier.proto.UnionType) nodeType_);
    }
    if (nodeTypeCase_ == 7) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(
            7, (boolean)((java.lang.Boolean) nodeType_));
    }
    if (nodeTypeCase_ == 8) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(
            8, (boolean)((java.lang.Boolean) nodeType_));
    }
    if (nodeTypeCase_ == 9) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(
            9, (boolean)((java.lang.Boolean) nodeType_));
    }
    if (nodeTypeCase_ == 10) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(
            10, (boolean)((java.lang.Boolean) nodeType_));
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  public static com.github.jsdossier.proto.TypeExpression parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.jsdossier.proto.TypeExpression parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.jsdossier.proto.TypeExpression parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.jsdossier.proto.TypeExpression parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.jsdossier.proto.TypeExpression parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.github.jsdossier.proto.TypeExpression parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static com.github.jsdossier.proto.TypeExpression parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static com.github.jsdossier.proto.TypeExpression parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static com.github.jsdossier.proto.TypeExpression parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.github.jsdossier.proto.TypeExpression parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.github.jsdossier.proto.TypeExpression prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code dossier.expression.TypeExpression}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:dossier.expression.TypeExpression)
      com.github.jsdossier.proto.TypeExpressionOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jsdossier.proto.Expression.internal_static_dossier_expression_TypeExpression_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jsdossier.proto.Expression.internal_static_dossier_expression_TypeExpression_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jsdossier.proto.TypeExpression.class, com.github.jsdossier.proto.TypeExpression.Builder.class);
    }

    // Construct using com.github.jsdossier.proto.TypeExpression.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      modifierCase_ = 0;
      modifier_ = null;
      nodeTypeCase_ = 0;
      nodeType_ = null;
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.github.jsdossier.proto.Expression.internal_static_dossier_expression_TypeExpression_descriptor;
    }

    public com.github.jsdossier.proto.TypeExpression getDefaultInstanceForType() {
      return com.github.jsdossier.proto.TypeExpression.getDefaultInstance();
    }

    public com.github.jsdossier.proto.TypeExpression build() {
      com.github.jsdossier.proto.TypeExpression result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.github.jsdossier.proto.TypeExpression buildPartial() {
      com.github.jsdossier.proto.TypeExpression result = new com.github.jsdossier.proto.TypeExpression(this);
      if (modifierCase_ == 1) {
        result.modifier_ = modifier_;
      }
      if (modifierCase_ == 2) {
        result.modifier_ = modifier_;
      }
      if (nodeTypeCase_ == 3) {
        if (functionTypeBuilder_ == null) {
          result.nodeType_ = nodeType_;
        } else {
          result.nodeType_ = functionTypeBuilder_.build();
        }
      }
      if (nodeTypeCase_ == 4) {
        if (namedTypeBuilder_ == null) {
          result.nodeType_ = nodeType_;
        } else {
          result.nodeType_ = namedTypeBuilder_.build();
        }
      }
      if (nodeTypeCase_ == 5) {
        if (recordTypeBuilder_ == null) {
          result.nodeType_ = nodeType_;
        } else {
          result.nodeType_ = recordTypeBuilder_.build();
        }
      }
      if (nodeTypeCase_ == 6) {
        if (unionTypeBuilder_ == null) {
          result.nodeType_ = nodeType_;
        } else {
          result.nodeType_ = unionTypeBuilder_.build();
        }
      }
      if (nodeTypeCase_ == 7) {
        result.nodeType_ = nodeType_;
      }
      if (nodeTypeCase_ == 8) {
        result.nodeType_ = nodeType_;
      }
      if (nodeTypeCase_ == 9) {
        result.nodeType_ = nodeType_;
      }
      if (nodeTypeCase_ == 10) {
        result.nodeType_ = nodeType_;
      }
      result.modifierCase_ = modifierCase_;
      result.nodeTypeCase_ = nodeTypeCase_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.github.jsdossier.proto.TypeExpression) {
        return mergeFrom((com.github.jsdossier.proto.TypeExpression)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.github.jsdossier.proto.TypeExpression other) {
      if (other == com.github.jsdossier.proto.TypeExpression.getDefaultInstance()) return this;
      switch (other.getModifierCase()) {
        case IS_OPTIONAL: {
          setIsOptional(other.getIsOptional());
          break;
        }
        case IS_VARARGS: {
          setIsVarargs(other.getIsVarargs());
          break;
        }
        case MODIFIER_NOT_SET: {
          break;
        }
      }
      switch (other.getNodeTypeCase()) {
        case FUNCTION_TYPE: {
          mergeFunctionType(other.getFunctionType());
          break;
        }
        case NAMED_TYPE: {
          mergeNamedType(other.getNamedType());
          break;
        }
        case RECORD_TYPE: {
          mergeRecordType(other.getRecordType());
          break;
        }
        case UNION_TYPE: {
          mergeUnionType(other.getUnionType());
          break;
        }
        case ANY_TYPE: {
          setAnyType(other.getAnyType());
          break;
        }
        case UNKNOWN_TYPE: {
          setUnknownType(other.getUnknownType());
          break;
        }
        case VOID_TYPE: {
          setVoidType(other.getVoidType());
          break;
        }
        case NULL_TYPE: {
          setNullType(other.getNullType());
          break;
        }
        case NODETYPE_NOT_SET: {
          break;
        }
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.github.jsdossier.proto.TypeExpression parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.github.jsdossier.proto.TypeExpression) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int modifierCase_ = 0;
    private java.lang.Object modifier_;
    public ModifierCase
        getModifierCase() {
      return ModifierCase.valueOf(
          modifierCase_);
    }

    public Builder clearModifier() {
      modifierCase_ = 0;
      modifier_ = null;
      onChanged();
      return this;
    }

    private int nodeTypeCase_ = 0;
    private java.lang.Object nodeType_;
    public NodeTypeCase
        getNodeTypeCase() {
      return NodeTypeCase.valueOf(
          nodeTypeCase_);
    }

    public Builder clearNodeType() {
      nodeTypeCase_ = 0;
      nodeType_ = null;
      onChanged();
      return this;
    }


    /**
     * <code>optional bool is_optional = 1;</code>
     */
    public boolean getIsOptional() {
      if (modifierCase_ == 1) {
        return (java.lang.Boolean) modifier_;
      }
      return false;
    }
    /**
     * <code>optional bool is_optional = 1;</code>
     */
    public Builder setIsOptional(boolean value) {
      modifierCase_ = 1;
      modifier_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bool is_optional = 1;</code>
     */
    public Builder clearIsOptional() {
      if (modifierCase_ == 1) {
        modifierCase_ = 0;
        modifier_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>optional bool is_varargs = 2;</code>
     */
    public boolean getIsVarargs() {
      if (modifierCase_ == 2) {
        return (java.lang.Boolean) modifier_;
      }
      return false;
    }
    /**
     * <code>optional bool is_varargs = 2;</code>
     */
    public Builder setIsVarargs(boolean value) {
      modifierCase_ = 2;
      modifier_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bool is_varargs = 2;</code>
     */
    public Builder clearIsVarargs() {
      if (modifierCase_ == 2) {
        modifierCase_ = 0;
        modifier_ = null;
        onChanged();
      }
      return this;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.FunctionType, com.github.jsdossier.proto.FunctionType.Builder, com.github.jsdossier.proto.FunctionTypeOrBuilder> functionTypeBuilder_;
    /**
     * <code>optional .dossier.expression.FunctionType function_type = 3;</code>
     */
    public com.github.jsdossier.proto.FunctionType getFunctionType() {
      if (functionTypeBuilder_ == null) {
        if (nodeTypeCase_ == 3) {
          return (com.github.jsdossier.proto.FunctionType) nodeType_;
        }
        return com.github.jsdossier.proto.FunctionType.getDefaultInstance();
      } else {
        if (nodeTypeCase_ == 3) {
          return functionTypeBuilder_.getMessage();
        }
        return com.github.jsdossier.proto.FunctionType.getDefaultInstance();
      }
    }
    /**
     * <code>optional .dossier.expression.FunctionType function_type = 3;</code>
     */
    public Builder setFunctionType(com.github.jsdossier.proto.FunctionType value) {
      if (functionTypeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        nodeType_ = value;
        onChanged();
      } else {
        functionTypeBuilder_.setMessage(value);
      }
      nodeTypeCase_ = 3;
      return this;
    }
    /**
     * <code>optional .dossier.expression.FunctionType function_type = 3;</code>
     */
    public Builder setFunctionType(
        com.github.jsdossier.proto.FunctionType.Builder builderForValue) {
      if (functionTypeBuilder_ == null) {
        nodeType_ = builderForValue.build();
        onChanged();
      } else {
        functionTypeBuilder_.setMessage(builderForValue.build());
      }
      nodeTypeCase_ = 3;
      return this;
    }
    /**
     * <code>optional .dossier.expression.FunctionType function_type = 3;</code>
     */
    public Builder mergeFunctionType(com.github.jsdossier.proto.FunctionType value) {
      if (functionTypeBuilder_ == null) {
        if (nodeTypeCase_ == 3 &&
            nodeType_ != com.github.jsdossier.proto.FunctionType.getDefaultInstance()) {
          nodeType_ = com.github.jsdossier.proto.FunctionType.newBuilder((com.github.jsdossier.proto.FunctionType) nodeType_)
              .mergeFrom(value).buildPartial();
        } else {
          nodeType_ = value;
        }
        onChanged();
      } else {
        if (nodeTypeCase_ == 3) {
          functionTypeBuilder_.mergeFrom(value);
        }
        functionTypeBuilder_.setMessage(value);
      }
      nodeTypeCase_ = 3;
      return this;
    }
    /**
     * <code>optional .dossier.expression.FunctionType function_type = 3;</code>
     */
    public Builder clearFunctionType() {
      if (functionTypeBuilder_ == null) {
        if (nodeTypeCase_ == 3) {
          nodeTypeCase_ = 0;
          nodeType_ = null;
          onChanged();
        }
      } else {
        if (nodeTypeCase_ == 3) {
          nodeTypeCase_ = 0;
          nodeType_ = null;
        }
        functionTypeBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>optional .dossier.expression.FunctionType function_type = 3;</code>
     */
    public com.github.jsdossier.proto.FunctionType.Builder getFunctionTypeBuilder() {
      return getFunctionTypeFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .dossier.expression.FunctionType function_type = 3;</code>
     */
    public com.github.jsdossier.proto.FunctionTypeOrBuilder getFunctionTypeOrBuilder() {
      if ((nodeTypeCase_ == 3) && (functionTypeBuilder_ != null)) {
        return functionTypeBuilder_.getMessageOrBuilder();
      } else {
        if (nodeTypeCase_ == 3) {
          return (com.github.jsdossier.proto.FunctionType) nodeType_;
        }
        return com.github.jsdossier.proto.FunctionType.getDefaultInstance();
      }
    }
    /**
     * <code>optional .dossier.expression.FunctionType function_type = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.FunctionType, com.github.jsdossier.proto.FunctionType.Builder, com.github.jsdossier.proto.FunctionTypeOrBuilder> 
        getFunctionTypeFieldBuilder() {
      if (functionTypeBuilder_ == null) {
        if (!(nodeTypeCase_ == 3)) {
          nodeType_ = com.github.jsdossier.proto.FunctionType.getDefaultInstance();
        }
        functionTypeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.jsdossier.proto.FunctionType, com.github.jsdossier.proto.FunctionType.Builder, com.github.jsdossier.proto.FunctionTypeOrBuilder>(
                (com.github.jsdossier.proto.FunctionType) nodeType_,
                getParentForChildren(),
                isClean());
        nodeType_ = null;
      }
      nodeTypeCase_ = 3;
      onChanged();;
      return functionTypeBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.NamedType, com.github.jsdossier.proto.NamedType.Builder, com.github.jsdossier.proto.NamedTypeOrBuilder> namedTypeBuilder_;
    /**
     * <code>optional .dossier.expression.NamedType named_type = 4;</code>
     */
    public com.github.jsdossier.proto.NamedType getNamedType() {
      if (namedTypeBuilder_ == null) {
        if (nodeTypeCase_ == 4) {
          return (com.github.jsdossier.proto.NamedType) nodeType_;
        }
        return com.github.jsdossier.proto.NamedType.getDefaultInstance();
      } else {
        if (nodeTypeCase_ == 4) {
          return namedTypeBuilder_.getMessage();
        }
        return com.github.jsdossier.proto.NamedType.getDefaultInstance();
      }
    }
    /**
     * <code>optional .dossier.expression.NamedType named_type = 4;</code>
     */
    public Builder setNamedType(com.github.jsdossier.proto.NamedType value) {
      if (namedTypeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        nodeType_ = value;
        onChanged();
      } else {
        namedTypeBuilder_.setMessage(value);
      }
      nodeTypeCase_ = 4;
      return this;
    }
    /**
     * <code>optional .dossier.expression.NamedType named_type = 4;</code>
     */
    public Builder setNamedType(
        com.github.jsdossier.proto.NamedType.Builder builderForValue) {
      if (namedTypeBuilder_ == null) {
        nodeType_ = builderForValue.build();
        onChanged();
      } else {
        namedTypeBuilder_.setMessage(builderForValue.build());
      }
      nodeTypeCase_ = 4;
      return this;
    }
    /**
     * <code>optional .dossier.expression.NamedType named_type = 4;</code>
     */
    public Builder mergeNamedType(com.github.jsdossier.proto.NamedType value) {
      if (namedTypeBuilder_ == null) {
        if (nodeTypeCase_ == 4 &&
            nodeType_ != com.github.jsdossier.proto.NamedType.getDefaultInstance()) {
          nodeType_ = com.github.jsdossier.proto.NamedType.newBuilder((com.github.jsdossier.proto.NamedType) nodeType_)
              .mergeFrom(value).buildPartial();
        } else {
          nodeType_ = value;
        }
        onChanged();
      } else {
        if (nodeTypeCase_ == 4) {
          namedTypeBuilder_.mergeFrom(value);
        }
        namedTypeBuilder_.setMessage(value);
      }
      nodeTypeCase_ = 4;
      return this;
    }
    /**
     * <code>optional .dossier.expression.NamedType named_type = 4;</code>
     */
    public Builder clearNamedType() {
      if (namedTypeBuilder_ == null) {
        if (nodeTypeCase_ == 4) {
          nodeTypeCase_ = 0;
          nodeType_ = null;
          onChanged();
        }
      } else {
        if (nodeTypeCase_ == 4) {
          nodeTypeCase_ = 0;
          nodeType_ = null;
        }
        namedTypeBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>optional .dossier.expression.NamedType named_type = 4;</code>
     */
    public com.github.jsdossier.proto.NamedType.Builder getNamedTypeBuilder() {
      return getNamedTypeFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .dossier.expression.NamedType named_type = 4;</code>
     */
    public com.github.jsdossier.proto.NamedTypeOrBuilder getNamedTypeOrBuilder() {
      if ((nodeTypeCase_ == 4) && (namedTypeBuilder_ != null)) {
        return namedTypeBuilder_.getMessageOrBuilder();
      } else {
        if (nodeTypeCase_ == 4) {
          return (com.github.jsdossier.proto.NamedType) nodeType_;
        }
        return com.github.jsdossier.proto.NamedType.getDefaultInstance();
      }
    }
    /**
     * <code>optional .dossier.expression.NamedType named_type = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.NamedType, com.github.jsdossier.proto.NamedType.Builder, com.github.jsdossier.proto.NamedTypeOrBuilder> 
        getNamedTypeFieldBuilder() {
      if (namedTypeBuilder_ == null) {
        if (!(nodeTypeCase_ == 4)) {
          nodeType_ = com.github.jsdossier.proto.NamedType.getDefaultInstance();
        }
        namedTypeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.jsdossier.proto.NamedType, com.github.jsdossier.proto.NamedType.Builder, com.github.jsdossier.proto.NamedTypeOrBuilder>(
                (com.github.jsdossier.proto.NamedType) nodeType_,
                getParentForChildren(),
                isClean());
        nodeType_ = null;
      }
      nodeTypeCase_ = 4;
      onChanged();;
      return namedTypeBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.RecordType, com.github.jsdossier.proto.RecordType.Builder, com.github.jsdossier.proto.RecordTypeOrBuilder> recordTypeBuilder_;
    /**
     * <code>optional .dossier.expression.RecordType record_type = 5;</code>
     */
    public com.github.jsdossier.proto.RecordType getRecordType() {
      if (recordTypeBuilder_ == null) {
        if (nodeTypeCase_ == 5) {
          return (com.github.jsdossier.proto.RecordType) nodeType_;
        }
        return com.github.jsdossier.proto.RecordType.getDefaultInstance();
      } else {
        if (nodeTypeCase_ == 5) {
          return recordTypeBuilder_.getMessage();
        }
        return com.github.jsdossier.proto.RecordType.getDefaultInstance();
      }
    }
    /**
     * <code>optional .dossier.expression.RecordType record_type = 5;</code>
     */
    public Builder setRecordType(com.github.jsdossier.proto.RecordType value) {
      if (recordTypeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        nodeType_ = value;
        onChanged();
      } else {
        recordTypeBuilder_.setMessage(value);
      }
      nodeTypeCase_ = 5;
      return this;
    }
    /**
     * <code>optional .dossier.expression.RecordType record_type = 5;</code>
     */
    public Builder setRecordType(
        com.github.jsdossier.proto.RecordType.Builder builderForValue) {
      if (recordTypeBuilder_ == null) {
        nodeType_ = builderForValue.build();
        onChanged();
      } else {
        recordTypeBuilder_.setMessage(builderForValue.build());
      }
      nodeTypeCase_ = 5;
      return this;
    }
    /**
     * <code>optional .dossier.expression.RecordType record_type = 5;</code>
     */
    public Builder mergeRecordType(com.github.jsdossier.proto.RecordType value) {
      if (recordTypeBuilder_ == null) {
        if (nodeTypeCase_ == 5 &&
            nodeType_ != com.github.jsdossier.proto.RecordType.getDefaultInstance()) {
          nodeType_ = com.github.jsdossier.proto.RecordType.newBuilder((com.github.jsdossier.proto.RecordType) nodeType_)
              .mergeFrom(value).buildPartial();
        } else {
          nodeType_ = value;
        }
        onChanged();
      } else {
        if (nodeTypeCase_ == 5) {
          recordTypeBuilder_.mergeFrom(value);
        }
        recordTypeBuilder_.setMessage(value);
      }
      nodeTypeCase_ = 5;
      return this;
    }
    /**
     * <code>optional .dossier.expression.RecordType record_type = 5;</code>
     */
    public Builder clearRecordType() {
      if (recordTypeBuilder_ == null) {
        if (nodeTypeCase_ == 5) {
          nodeTypeCase_ = 0;
          nodeType_ = null;
          onChanged();
        }
      } else {
        if (nodeTypeCase_ == 5) {
          nodeTypeCase_ = 0;
          nodeType_ = null;
        }
        recordTypeBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>optional .dossier.expression.RecordType record_type = 5;</code>
     */
    public com.github.jsdossier.proto.RecordType.Builder getRecordTypeBuilder() {
      return getRecordTypeFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .dossier.expression.RecordType record_type = 5;</code>
     */
    public com.github.jsdossier.proto.RecordTypeOrBuilder getRecordTypeOrBuilder() {
      if ((nodeTypeCase_ == 5) && (recordTypeBuilder_ != null)) {
        return recordTypeBuilder_.getMessageOrBuilder();
      } else {
        if (nodeTypeCase_ == 5) {
          return (com.github.jsdossier.proto.RecordType) nodeType_;
        }
        return com.github.jsdossier.proto.RecordType.getDefaultInstance();
      }
    }
    /**
     * <code>optional .dossier.expression.RecordType record_type = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.RecordType, com.github.jsdossier.proto.RecordType.Builder, com.github.jsdossier.proto.RecordTypeOrBuilder> 
        getRecordTypeFieldBuilder() {
      if (recordTypeBuilder_ == null) {
        if (!(nodeTypeCase_ == 5)) {
          nodeType_ = com.github.jsdossier.proto.RecordType.getDefaultInstance();
        }
        recordTypeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.jsdossier.proto.RecordType, com.github.jsdossier.proto.RecordType.Builder, com.github.jsdossier.proto.RecordTypeOrBuilder>(
                (com.github.jsdossier.proto.RecordType) nodeType_,
                getParentForChildren(),
                isClean());
        nodeType_ = null;
      }
      nodeTypeCase_ = 5;
      onChanged();;
      return recordTypeBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.UnionType, com.github.jsdossier.proto.UnionType.Builder, com.github.jsdossier.proto.UnionTypeOrBuilder> unionTypeBuilder_;
    /**
     * <code>optional .dossier.expression.UnionType union_type = 6;</code>
     */
    public com.github.jsdossier.proto.UnionType getUnionType() {
      if (unionTypeBuilder_ == null) {
        if (nodeTypeCase_ == 6) {
          return (com.github.jsdossier.proto.UnionType) nodeType_;
        }
        return com.github.jsdossier.proto.UnionType.getDefaultInstance();
      } else {
        if (nodeTypeCase_ == 6) {
          return unionTypeBuilder_.getMessage();
        }
        return com.github.jsdossier.proto.UnionType.getDefaultInstance();
      }
    }
    /**
     * <code>optional .dossier.expression.UnionType union_type = 6;</code>
     */
    public Builder setUnionType(com.github.jsdossier.proto.UnionType value) {
      if (unionTypeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        nodeType_ = value;
        onChanged();
      } else {
        unionTypeBuilder_.setMessage(value);
      }
      nodeTypeCase_ = 6;
      return this;
    }
    /**
     * <code>optional .dossier.expression.UnionType union_type = 6;</code>
     */
    public Builder setUnionType(
        com.github.jsdossier.proto.UnionType.Builder builderForValue) {
      if (unionTypeBuilder_ == null) {
        nodeType_ = builderForValue.build();
        onChanged();
      } else {
        unionTypeBuilder_.setMessage(builderForValue.build());
      }
      nodeTypeCase_ = 6;
      return this;
    }
    /**
     * <code>optional .dossier.expression.UnionType union_type = 6;</code>
     */
    public Builder mergeUnionType(com.github.jsdossier.proto.UnionType value) {
      if (unionTypeBuilder_ == null) {
        if (nodeTypeCase_ == 6 &&
            nodeType_ != com.github.jsdossier.proto.UnionType.getDefaultInstance()) {
          nodeType_ = com.github.jsdossier.proto.UnionType.newBuilder((com.github.jsdossier.proto.UnionType) nodeType_)
              .mergeFrom(value).buildPartial();
        } else {
          nodeType_ = value;
        }
        onChanged();
      } else {
        if (nodeTypeCase_ == 6) {
          unionTypeBuilder_.mergeFrom(value);
        }
        unionTypeBuilder_.setMessage(value);
      }
      nodeTypeCase_ = 6;
      return this;
    }
    /**
     * <code>optional .dossier.expression.UnionType union_type = 6;</code>
     */
    public Builder clearUnionType() {
      if (unionTypeBuilder_ == null) {
        if (nodeTypeCase_ == 6) {
          nodeTypeCase_ = 0;
          nodeType_ = null;
          onChanged();
        }
      } else {
        if (nodeTypeCase_ == 6) {
          nodeTypeCase_ = 0;
          nodeType_ = null;
        }
        unionTypeBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>optional .dossier.expression.UnionType union_type = 6;</code>
     */
    public com.github.jsdossier.proto.UnionType.Builder getUnionTypeBuilder() {
      return getUnionTypeFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .dossier.expression.UnionType union_type = 6;</code>
     */
    public com.github.jsdossier.proto.UnionTypeOrBuilder getUnionTypeOrBuilder() {
      if ((nodeTypeCase_ == 6) && (unionTypeBuilder_ != null)) {
        return unionTypeBuilder_.getMessageOrBuilder();
      } else {
        if (nodeTypeCase_ == 6) {
          return (com.github.jsdossier.proto.UnionType) nodeType_;
        }
        return com.github.jsdossier.proto.UnionType.getDefaultInstance();
      }
    }
    /**
     * <code>optional .dossier.expression.UnionType union_type = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.UnionType, com.github.jsdossier.proto.UnionType.Builder, com.github.jsdossier.proto.UnionTypeOrBuilder> 
        getUnionTypeFieldBuilder() {
      if (unionTypeBuilder_ == null) {
        if (!(nodeTypeCase_ == 6)) {
          nodeType_ = com.github.jsdossier.proto.UnionType.getDefaultInstance();
        }
        unionTypeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.jsdossier.proto.UnionType, com.github.jsdossier.proto.UnionType.Builder, com.github.jsdossier.proto.UnionTypeOrBuilder>(
                (com.github.jsdossier.proto.UnionType) nodeType_,
                getParentForChildren(),
                isClean());
        nodeType_ = null;
      }
      nodeTypeCase_ = 6;
      onChanged();;
      return unionTypeBuilder_;
    }

    /**
     * <code>optional bool any_type = 7;</code>
     */
    public boolean getAnyType() {
      if (nodeTypeCase_ == 7) {
        return (java.lang.Boolean) nodeType_;
      }
      return false;
    }
    /**
     * <code>optional bool any_type = 7;</code>
     */
    public Builder setAnyType(boolean value) {
      nodeTypeCase_ = 7;
      nodeType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bool any_type = 7;</code>
     */
    public Builder clearAnyType() {
      if (nodeTypeCase_ == 7) {
        nodeTypeCase_ = 0;
        nodeType_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>optional bool unknown_type = 8;</code>
     */
    public boolean getUnknownType() {
      if (nodeTypeCase_ == 8) {
        return (java.lang.Boolean) nodeType_;
      }
      return false;
    }
    /**
     * <code>optional bool unknown_type = 8;</code>
     */
    public Builder setUnknownType(boolean value) {
      nodeTypeCase_ = 8;
      nodeType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bool unknown_type = 8;</code>
     */
    public Builder clearUnknownType() {
      if (nodeTypeCase_ == 8) {
        nodeTypeCase_ = 0;
        nodeType_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>optional bool void_type = 9;</code>
     */
    public boolean getVoidType() {
      if (nodeTypeCase_ == 9) {
        return (java.lang.Boolean) nodeType_;
      }
      return false;
    }
    /**
     * <code>optional bool void_type = 9;</code>
     */
    public Builder setVoidType(boolean value) {
      nodeTypeCase_ = 9;
      nodeType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bool void_type = 9;</code>
     */
    public Builder clearVoidType() {
      if (nodeTypeCase_ == 9) {
        nodeTypeCase_ = 0;
        nodeType_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>optional bool null_type = 10;</code>
     */
    public boolean getNullType() {
      if (nodeTypeCase_ == 10) {
        return (java.lang.Boolean) nodeType_;
      }
      return false;
    }
    /**
     * <code>optional bool null_type = 10;</code>
     */
    public Builder setNullType(boolean value) {
      nodeTypeCase_ = 10;
      nodeType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bool null_type = 10;</code>
     */
    public Builder clearNullType() {
      if (nodeTypeCase_ == 10) {
        nodeTypeCase_ = 0;
        nodeType_ = null;
        onChanged();
      }
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:dossier.expression.TypeExpression)
  }

  // @@protoc_insertion_point(class_scope:dossier.expression.TypeExpression)
  private static final com.github.jsdossier.proto.TypeExpression DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.github.jsdossier.proto.TypeExpression();
  }

  public static com.github.jsdossier.proto.TypeExpression getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TypeExpression>
      PARSER = new com.google.protobuf.AbstractParser<TypeExpression>() {
    public TypeExpression parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      try {
        return new TypeExpression(input, extensionRegistry);
      } catch (RuntimeException e) {
        if (e.getCause() instanceof
            com.google.protobuf.InvalidProtocolBufferException) {
          throw (com.google.protobuf.InvalidProtocolBufferException)
              e.getCause();
        }
        throw e;
      }
    }
  };

  public static com.google.protobuf.Parser<TypeExpression> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TypeExpression> getParserForType() {
    return PARSER;
  }

  public com.github.jsdossier.proto.TypeExpression getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

