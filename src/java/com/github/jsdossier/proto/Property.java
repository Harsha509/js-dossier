// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dossier.proto

package com.github.jsdossier.proto;

/**
 * Protobuf type {@code dossier.Property}
 *
 * <pre>
 * Describes a non-function JavaScript property.
 * </pre>
 */
public  final class Property extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:dossier.Property)
    PropertyOrBuilder {
  // Use Property.newBuilder() to construct.
  private Property(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private Property() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private Property(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            com.github.jsdossier.proto.BaseProperty.Builder subBuilder = null;
            if (base_ != null) {
              subBuilder = base_.toBuilder();
            }
            base_ = input.readMessage(com.github.jsdossier.proto.BaseProperty.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(base_);
              base_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            com.github.jsdossier.proto.Comment.Builder subBuilder = null;
            if (type_ != null) {
              subBuilder = type_.toBuilder();
            }
            type_ = input.readMessage(com.github.jsdossier.proto.Comment.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(type_);
              type_ = subBuilder.buildPartial();
            }

            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw new RuntimeException(e.setUnfinishedMessage(this));
    } catch (java.io.IOException e) {
      throw new RuntimeException(
          new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this));
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.github.jsdossier.proto.Dossier.internal_static_dossier_Property_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.github.jsdossier.proto.Dossier.internal_static_dossier_Property_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.github.jsdossier.proto.Property.class, com.github.jsdossier.proto.Property.Builder.class);
  }

  public static final int BASE_FIELD_NUMBER = 1;
  private com.github.jsdossier.proto.BaseProperty base_;
  /**
   * <code>optional .dossier.BaseProperty base = 1;</code>
   */
  public boolean hasBase() {
    return base_ != null;
  }
  /**
   * <code>optional .dossier.BaseProperty base = 1;</code>
   */
  public com.github.jsdossier.proto.BaseProperty getBase() {
    return base_ == null ? com.github.jsdossier.proto.BaseProperty.getDefaultInstance() : base_;
  }
  /**
   * <code>optional .dossier.BaseProperty base = 1;</code>
   */
  public com.github.jsdossier.proto.BasePropertyOrBuilder getBaseOrBuilder() {
    return getBase();
  }

  public static final int TYPE_FIELD_NUMBER = 2;
  private com.github.jsdossier.proto.Comment type_;
  /**
   * <code>optional .dossier.Comment type = 2;</code>
   *
   * <pre>
   * HTML snippet declaring the property type. May be omitted if the type is
   * unknown.
   * </pre>
   */
  public boolean hasType() {
    return type_ != null;
  }
  /**
   * <code>optional .dossier.Comment type = 2;</code>
   *
   * <pre>
   * HTML snippet declaring the property type. May be omitted if the type is
   * unknown.
   * </pre>
   */
  public com.github.jsdossier.proto.Comment getType() {
    return type_ == null ? com.github.jsdossier.proto.Comment.getDefaultInstance() : type_;
  }
  /**
   * <code>optional .dossier.Comment type = 2;</code>
   *
   * <pre>
   * HTML snippet declaring the property type. May be omitted if the type is
   * unknown.
   * </pre>
   */
  public com.github.jsdossier.proto.CommentOrBuilder getTypeOrBuilder() {
    return getType();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (base_ != null) {
      output.writeMessage(1, getBase());
    }
    if (type_ != null) {
      output.writeMessage(2, getType());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (base_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getBase());
    }
    if (type_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getType());
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  public static com.github.jsdossier.proto.Property parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.jsdossier.proto.Property parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.jsdossier.proto.Property parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.jsdossier.proto.Property parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.jsdossier.proto.Property parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.github.jsdossier.proto.Property parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static com.github.jsdossier.proto.Property parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static com.github.jsdossier.proto.Property parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static com.github.jsdossier.proto.Property parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.github.jsdossier.proto.Property parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.github.jsdossier.proto.Property prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code dossier.Property}
   *
   * <pre>
   * Describes a non-function JavaScript property.
   * </pre>
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:dossier.Property)
      com.github.jsdossier.proto.PropertyOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jsdossier.proto.Dossier.internal_static_dossier_Property_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jsdossier.proto.Dossier.internal_static_dossier_Property_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jsdossier.proto.Property.class, com.github.jsdossier.proto.Property.Builder.class);
    }

    // Construct using com.github.jsdossier.proto.Property.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      if (baseBuilder_ == null) {
        base_ = null;
      } else {
        base_ = null;
        baseBuilder_ = null;
      }
      if (typeBuilder_ == null) {
        type_ = null;
      } else {
        type_ = null;
        typeBuilder_ = null;
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.github.jsdossier.proto.Dossier.internal_static_dossier_Property_descriptor;
    }

    public com.github.jsdossier.proto.Property getDefaultInstanceForType() {
      return com.github.jsdossier.proto.Property.getDefaultInstance();
    }

    public com.github.jsdossier.proto.Property build() {
      com.github.jsdossier.proto.Property result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.github.jsdossier.proto.Property buildPartial() {
      com.github.jsdossier.proto.Property result = new com.github.jsdossier.proto.Property(this);
      if (baseBuilder_ == null) {
        result.base_ = base_;
      } else {
        result.base_ = baseBuilder_.build();
      }
      if (typeBuilder_ == null) {
        result.type_ = type_;
      } else {
        result.type_ = typeBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.github.jsdossier.proto.Property) {
        return mergeFrom((com.github.jsdossier.proto.Property)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.github.jsdossier.proto.Property other) {
      if (other == com.github.jsdossier.proto.Property.getDefaultInstance()) return this;
      if (other.hasBase()) {
        mergeBase(other.getBase());
      }
      if (other.hasType()) {
        mergeType(other.getType());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.github.jsdossier.proto.Property parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.github.jsdossier.proto.Property) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private com.github.jsdossier.proto.BaseProperty base_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.BaseProperty, com.github.jsdossier.proto.BaseProperty.Builder, com.github.jsdossier.proto.BasePropertyOrBuilder> baseBuilder_;
    /**
     * <code>optional .dossier.BaseProperty base = 1;</code>
     */
    public boolean hasBase() {
      return baseBuilder_ != null || base_ != null;
    }
    /**
     * <code>optional .dossier.BaseProperty base = 1;</code>
     */
    public com.github.jsdossier.proto.BaseProperty getBase() {
      if (baseBuilder_ == null) {
        return base_ == null ? com.github.jsdossier.proto.BaseProperty.getDefaultInstance() : base_;
      } else {
        return baseBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .dossier.BaseProperty base = 1;</code>
     */
    public Builder setBase(com.github.jsdossier.proto.BaseProperty value) {
      if (baseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        base_ = value;
        onChanged();
      } else {
        baseBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .dossier.BaseProperty base = 1;</code>
     */
    public Builder setBase(
        com.github.jsdossier.proto.BaseProperty.Builder builderForValue) {
      if (baseBuilder_ == null) {
        base_ = builderForValue.build();
        onChanged();
      } else {
        baseBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .dossier.BaseProperty base = 1;</code>
     */
    public Builder mergeBase(com.github.jsdossier.proto.BaseProperty value) {
      if (baseBuilder_ == null) {
        if (base_ != null) {
          base_ =
            com.github.jsdossier.proto.BaseProperty.newBuilder(base_).mergeFrom(value).buildPartial();
        } else {
          base_ = value;
        }
        onChanged();
      } else {
        baseBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .dossier.BaseProperty base = 1;</code>
     */
    public Builder clearBase() {
      if (baseBuilder_ == null) {
        base_ = null;
        onChanged();
      } else {
        base_ = null;
        baseBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .dossier.BaseProperty base = 1;</code>
     */
    public com.github.jsdossier.proto.BaseProperty.Builder getBaseBuilder() {
      
      onChanged();
      return getBaseFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .dossier.BaseProperty base = 1;</code>
     */
    public com.github.jsdossier.proto.BasePropertyOrBuilder getBaseOrBuilder() {
      if (baseBuilder_ != null) {
        return baseBuilder_.getMessageOrBuilder();
      } else {
        return base_ == null ?
            com.github.jsdossier.proto.BaseProperty.getDefaultInstance() : base_;
      }
    }
    /**
     * <code>optional .dossier.BaseProperty base = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.BaseProperty, com.github.jsdossier.proto.BaseProperty.Builder, com.github.jsdossier.proto.BasePropertyOrBuilder> 
        getBaseFieldBuilder() {
      if (baseBuilder_ == null) {
        baseBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.jsdossier.proto.BaseProperty, com.github.jsdossier.proto.BaseProperty.Builder, com.github.jsdossier.proto.BasePropertyOrBuilder>(
                getBase(),
                getParentForChildren(),
                isClean());
        base_ = null;
      }
      return baseBuilder_;
    }

    private com.github.jsdossier.proto.Comment type_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.Comment, com.github.jsdossier.proto.Comment.Builder, com.github.jsdossier.proto.CommentOrBuilder> typeBuilder_;
    /**
     * <code>optional .dossier.Comment type = 2;</code>
     *
     * <pre>
     * HTML snippet declaring the property type. May be omitted if the type is
     * unknown.
     * </pre>
     */
    public boolean hasType() {
      return typeBuilder_ != null || type_ != null;
    }
    /**
     * <code>optional .dossier.Comment type = 2;</code>
     *
     * <pre>
     * HTML snippet declaring the property type. May be omitted if the type is
     * unknown.
     * </pre>
     */
    public com.github.jsdossier.proto.Comment getType() {
      if (typeBuilder_ == null) {
        return type_ == null ? com.github.jsdossier.proto.Comment.getDefaultInstance() : type_;
      } else {
        return typeBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .dossier.Comment type = 2;</code>
     *
     * <pre>
     * HTML snippet declaring the property type. May be omitted if the type is
     * unknown.
     * </pre>
     */
    public Builder setType(com.github.jsdossier.proto.Comment value) {
      if (typeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        typeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .dossier.Comment type = 2;</code>
     *
     * <pre>
     * HTML snippet declaring the property type. May be omitted if the type is
     * unknown.
     * </pre>
     */
    public Builder setType(
        com.github.jsdossier.proto.Comment.Builder builderForValue) {
      if (typeBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        typeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .dossier.Comment type = 2;</code>
     *
     * <pre>
     * HTML snippet declaring the property type. May be omitted if the type is
     * unknown.
     * </pre>
     */
    public Builder mergeType(com.github.jsdossier.proto.Comment value) {
      if (typeBuilder_ == null) {
        if (type_ != null) {
          type_ =
            com.github.jsdossier.proto.Comment.newBuilder(type_).mergeFrom(value).buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        typeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .dossier.Comment type = 2;</code>
     *
     * <pre>
     * HTML snippet declaring the property type. May be omitted if the type is
     * unknown.
     * </pre>
     */
    public Builder clearType() {
      if (typeBuilder_ == null) {
        type_ = null;
        onChanged();
      } else {
        type_ = null;
        typeBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .dossier.Comment type = 2;</code>
     *
     * <pre>
     * HTML snippet declaring the property type. May be omitted if the type is
     * unknown.
     * </pre>
     */
    public com.github.jsdossier.proto.Comment.Builder getTypeBuilder() {
      
      onChanged();
      return getTypeFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .dossier.Comment type = 2;</code>
     *
     * <pre>
     * HTML snippet declaring the property type. May be omitted if the type is
     * unknown.
     * </pre>
     */
    public com.github.jsdossier.proto.CommentOrBuilder getTypeOrBuilder() {
      if (typeBuilder_ != null) {
        return typeBuilder_.getMessageOrBuilder();
      } else {
        return type_ == null ?
            com.github.jsdossier.proto.Comment.getDefaultInstance() : type_;
      }
    }
    /**
     * <code>optional .dossier.Comment type = 2;</code>
     *
     * <pre>
     * HTML snippet declaring the property type. May be omitted if the type is
     * unknown.
     * </pre>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.Comment, com.github.jsdossier.proto.Comment.Builder, com.github.jsdossier.proto.CommentOrBuilder> 
        getTypeFieldBuilder() {
      if (typeBuilder_ == null) {
        typeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.jsdossier.proto.Comment, com.github.jsdossier.proto.Comment.Builder, com.github.jsdossier.proto.CommentOrBuilder>(
                getType(),
                getParentForChildren(),
                isClean());
        type_ = null;
      }
      return typeBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:dossier.Property)
  }

  // @@protoc_insertion_point(class_scope:dossier.Property)
  private static final com.github.jsdossier.proto.Property DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.github.jsdossier.proto.Property();
  }

  public static com.github.jsdossier.proto.Property getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Property>
      PARSER = new com.google.protobuf.AbstractParser<Property>() {
    public Property parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      try {
        return new Property(input, extensionRegistry);
      } catch (RuntimeException e) {
        if (e.getCause() instanceof
            com.google.protobuf.InvalidProtocolBufferException) {
          throw (com.google.protobuf.InvalidProtocolBufferException)
              e.getCause();
        }
        throw e;
      }
    }
  };

  public static com.google.protobuf.Parser<Property> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Property> getParserForType() {
    return PARSER;
  }

  public com.github.jsdossier.proto.Property getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

