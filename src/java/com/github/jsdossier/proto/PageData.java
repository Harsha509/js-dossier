// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dossier.proto

package com.github.jsdossier.proto;

/**
 * Protobuf type {@code dossier.PageData}
 */
public  final class PageData extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:dossier.PageData)
    PageDataOrBuilder {
  // Use PageData.newBuilder() to construct.
  private PageData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private PageData() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private PageData(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            com.github.jsdossier.proto.Resources.Builder subBuilder = null;
            if (resources_ != null) {
              subBuilder = resources_.toBuilder();
            }
            resources_ = input.readMessage(com.github.jsdossier.proto.Resources.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(resources_);
              resources_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            com.github.jsdossier.proto.PageData.TypeCollection.Builder subBuilder = null;
            if (contentCase_ == 2) {
              subBuilder = ((com.github.jsdossier.proto.PageData.TypeCollection) content_).toBuilder();
            }
            content_ =
                input.readMessage(com.github.jsdossier.proto.PageData.TypeCollection.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.github.jsdossier.proto.PageData.TypeCollection) content_);
              content_ = subBuilder.buildPartial();
            }
            contentCase_ = 2;
            break;
          }
          case 26: {
            com.github.jsdossier.proto.PageData.Markdown.Builder subBuilder = null;
            if (contentCase_ == 3) {
              subBuilder = ((com.github.jsdossier.proto.PageData.Markdown) content_).toBuilder();
            }
            content_ =
                input.readMessage(com.github.jsdossier.proto.PageData.Markdown.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.github.jsdossier.proto.PageData.Markdown) content_);
              content_ = subBuilder.buildPartial();
            }
            contentCase_ = 3;
            break;
          }
          case 34: {
            com.github.jsdossier.proto.SourceFile.Builder subBuilder = null;
            if (contentCase_ == 4) {
              subBuilder = ((com.github.jsdossier.proto.SourceFile) content_).toBuilder();
            }
            content_ =
                input.readMessage(com.github.jsdossier.proto.SourceFile.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.github.jsdossier.proto.SourceFile) content_);
              content_ = subBuilder.buildPartial();
            }
            contentCase_ = 4;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw new RuntimeException(e.setUnfinishedMessage(this));
    } catch (java.io.IOException e) {
      throw new RuntimeException(
          new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this));
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.github.jsdossier.proto.Dossier.internal_static_dossier_PageData_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.github.jsdossier.proto.Dossier.internal_static_dossier_PageData_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.github.jsdossier.proto.PageData.class, com.github.jsdossier.proto.PageData.Builder.class);
  }

  public interface MarkdownOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dossier.PageData.Markdown)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string title = 1;</code>
     */
    java.lang.String getTitle();
    /**
     * <code>optional string title = 1;</code>
     */
    com.google.protobuf.ByteString
        getTitleBytes();

    /**
     * <code>optional .dossier.Comment content = 2;</code>
     */
    boolean hasContent();
    /**
     * <code>optional .dossier.Comment content = 2;</code>
     */
    com.github.jsdossier.proto.Comment getContent();
    /**
     * <code>optional .dossier.Comment content = 2;</code>
     */
    com.github.jsdossier.proto.CommentOrBuilder getContentOrBuilder();
  }
  /**
   * Protobuf type {@code dossier.PageData.Markdown}
   */
  public  static final class Markdown extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dossier.PageData.Markdown)
      MarkdownOrBuilder {
    // Use Markdown.newBuilder() to construct.
    private Markdown(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Markdown() {
      title_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Markdown(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              title_ = s;
              break;
            }
            case 18: {
              com.github.jsdossier.proto.Comment.Builder subBuilder = null;
              if (content_ != null) {
                subBuilder = content_.toBuilder();
              }
              content_ = input.readMessage(com.github.jsdossier.proto.Comment.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(content_);
                content_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jsdossier.proto.Dossier.internal_static_dossier_PageData_Markdown_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jsdossier.proto.Dossier.internal_static_dossier_PageData_Markdown_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jsdossier.proto.PageData.Markdown.class, com.github.jsdossier.proto.PageData.Markdown.Builder.class);
    }

    public static final int TITLE_FIELD_NUMBER = 1;
    private volatile java.lang.Object title_;
    /**
     * <code>optional string title = 1;</code>
     */
    public java.lang.String getTitle() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        title_ = s;
        return s;
      }
    }
    /**
     * <code>optional string title = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTitleBytes() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        title_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONTENT_FIELD_NUMBER = 2;
    private com.github.jsdossier.proto.Comment content_;
    /**
     * <code>optional .dossier.Comment content = 2;</code>
     */
    public boolean hasContent() {
      return content_ != null;
    }
    /**
     * <code>optional .dossier.Comment content = 2;</code>
     */
    public com.github.jsdossier.proto.Comment getContent() {
      return content_ == null ? com.github.jsdossier.proto.Comment.getDefaultInstance() : content_;
    }
    /**
     * <code>optional .dossier.Comment content = 2;</code>
     */
    public com.github.jsdossier.proto.CommentOrBuilder getContentOrBuilder() {
      return getContent();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTitleBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, title_);
      }
      if (content_ != null) {
        output.writeMessage(2, getContent());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTitleBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, title_);
      }
      if (content_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getContent());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.github.jsdossier.proto.PageData.Markdown parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jsdossier.proto.PageData.Markdown parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jsdossier.proto.PageData.Markdown parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jsdossier.proto.PageData.Markdown parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jsdossier.proto.PageData.Markdown parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.github.jsdossier.proto.PageData.Markdown parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.github.jsdossier.proto.PageData.Markdown parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.github.jsdossier.proto.PageData.Markdown parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.github.jsdossier.proto.PageData.Markdown parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.github.jsdossier.proto.PageData.Markdown parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jsdossier.proto.PageData.Markdown prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dossier.PageData.Markdown}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dossier.PageData.Markdown)
        com.github.jsdossier.proto.PageData.MarkdownOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jsdossier.proto.Dossier.internal_static_dossier_PageData_Markdown_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jsdossier.proto.Dossier.internal_static_dossier_PageData_Markdown_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jsdossier.proto.PageData.Markdown.class, com.github.jsdossier.proto.PageData.Markdown.Builder.class);
      }

      // Construct using com.github.jsdossier.proto.PageData.Markdown.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        title_ = "";

        if (contentBuilder_ == null) {
          content_ = null;
        } else {
          content_ = null;
          contentBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jsdossier.proto.Dossier.internal_static_dossier_PageData_Markdown_descriptor;
      }

      public com.github.jsdossier.proto.PageData.Markdown getDefaultInstanceForType() {
        return com.github.jsdossier.proto.PageData.Markdown.getDefaultInstance();
      }

      public com.github.jsdossier.proto.PageData.Markdown build() {
        com.github.jsdossier.proto.PageData.Markdown result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jsdossier.proto.PageData.Markdown buildPartial() {
        com.github.jsdossier.proto.PageData.Markdown result = new com.github.jsdossier.proto.PageData.Markdown(this);
        result.title_ = title_;
        if (contentBuilder_ == null) {
          result.content_ = content_;
        } else {
          result.content_ = contentBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jsdossier.proto.PageData.Markdown) {
          return mergeFrom((com.github.jsdossier.proto.PageData.Markdown)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jsdossier.proto.PageData.Markdown other) {
        if (other == com.github.jsdossier.proto.PageData.Markdown.getDefaultInstance()) return this;
        if (!other.getTitle().isEmpty()) {
          title_ = other.title_;
          onChanged();
        }
        if (other.hasContent()) {
          mergeContent(other.getContent());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jsdossier.proto.PageData.Markdown parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jsdossier.proto.PageData.Markdown) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object title_ = "";
      /**
       * <code>optional string title = 1;</code>
       */
      public java.lang.String getTitle() {
        java.lang.Object ref = title_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          title_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string title = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTitleBytes() {
        java.lang.Object ref = title_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          title_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string title = 1;</code>
       */
      public Builder setTitle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        title_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string title = 1;</code>
       */
      public Builder clearTitle() {
        
        title_ = getDefaultInstance().getTitle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string title = 1;</code>
       */
      public Builder setTitleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        title_ = value;
        onChanged();
        return this;
      }

      private com.github.jsdossier.proto.Comment content_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          com.github.jsdossier.proto.Comment, com.github.jsdossier.proto.Comment.Builder, com.github.jsdossier.proto.CommentOrBuilder> contentBuilder_;
      /**
       * <code>optional .dossier.Comment content = 2;</code>
       */
      public boolean hasContent() {
        return contentBuilder_ != null || content_ != null;
      }
      /**
       * <code>optional .dossier.Comment content = 2;</code>
       */
      public com.github.jsdossier.proto.Comment getContent() {
        if (contentBuilder_ == null) {
          return content_ == null ? com.github.jsdossier.proto.Comment.getDefaultInstance() : content_;
        } else {
          return contentBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dossier.Comment content = 2;</code>
       */
      public Builder setContent(com.github.jsdossier.proto.Comment value) {
        if (contentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          content_ = value;
          onChanged();
        } else {
          contentBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dossier.Comment content = 2;</code>
       */
      public Builder setContent(
          com.github.jsdossier.proto.Comment.Builder builderForValue) {
        if (contentBuilder_ == null) {
          content_ = builderForValue.build();
          onChanged();
        } else {
          contentBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dossier.Comment content = 2;</code>
       */
      public Builder mergeContent(com.github.jsdossier.proto.Comment value) {
        if (contentBuilder_ == null) {
          if (content_ != null) {
            content_ =
              com.github.jsdossier.proto.Comment.newBuilder(content_).mergeFrom(value).buildPartial();
          } else {
            content_ = value;
          }
          onChanged();
        } else {
          contentBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dossier.Comment content = 2;</code>
       */
      public Builder clearContent() {
        if (contentBuilder_ == null) {
          content_ = null;
          onChanged();
        } else {
          content_ = null;
          contentBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dossier.Comment content = 2;</code>
       */
      public com.github.jsdossier.proto.Comment.Builder getContentBuilder() {
        
        onChanged();
        return getContentFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dossier.Comment content = 2;</code>
       */
      public com.github.jsdossier.proto.CommentOrBuilder getContentOrBuilder() {
        if (contentBuilder_ != null) {
          return contentBuilder_.getMessageOrBuilder();
        } else {
          return content_ == null ?
              com.github.jsdossier.proto.Comment.getDefaultInstance() : content_;
        }
      }
      /**
       * <code>optional .dossier.Comment content = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.github.jsdossier.proto.Comment, com.github.jsdossier.proto.Comment.Builder, com.github.jsdossier.proto.CommentOrBuilder> 
          getContentFieldBuilder() {
        if (contentBuilder_ == null) {
          contentBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.github.jsdossier.proto.Comment, com.github.jsdossier.proto.Comment.Builder, com.github.jsdossier.proto.CommentOrBuilder>(
                  getContent(),
                  getParentForChildren(),
                  isClean());
          content_ = null;
        }
        return contentBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dossier.PageData.Markdown)
    }

    // @@protoc_insertion_point(class_scope:dossier.PageData.Markdown)
    private static final com.github.jsdossier.proto.PageData.Markdown DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jsdossier.proto.PageData.Markdown();
    }

    public static com.github.jsdossier.proto.PageData.Markdown getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Markdown>
        PARSER = new com.google.protobuf.AbstractParser<Markdown>() {
      public Markdown parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Markdown(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Markdown> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Markdown> getParserForType() {
      return PARSER;
    }

    public com.github.jsdossier.proto.PageData.Markdown getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TypeCollectionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dossier.PageData.TypeCollection)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .dossier.JsType type = 1;</code>
     */
    java.util.List<com.github.jsdossier.proto.JsType> 
        getTypeList();
    /**
     * <code>repeated .dossier.JsType type = 1;</code>
     */
    com.github.jsdossier.proto.JsType getType(int index);
    /**
     * <code>repeated .dossier.JsType type = 1;</code>
     */
    int getTypeCount();
    /**
     * <code>repeated .dossier.JsType type = 1;</code>
     */
    java.util.List<? extends com.github.jsdossier.proto.JsTypeOrBuilder> 
        getTypeOrBuilderList();
    /**
     * <code>repeated .dossier.JsType type = 1;</code>
     */
    com.github.jsdossier.proto.JsTypeOrBuilder getTypeOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dossier.PageData.TypeCollection}
   */
  public  static final class TypeCollection extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dossier.PageData.TypeCollection)
      TypeCollectionOrBuilder {
    // Use TypeCollection.newBuilder() to construct.
    private TypeCollection(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private TypeCollection() {
      type_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TypeCollection(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                type_ = new java.util.ArrayList<com.github.jsdossier.proto.JsType>();
                mutable_bitField0_ |= 0x00000001;
              }
              type_.add(input.readMessage(com.github.jsdossier.proto.JsType.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          type_ = java.util.Collections.unmodifiableList(type_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jsdossier.proto.Dossier.internal_static_dossier_PageData_TypeCollection_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jsdossier.proto.Dossier.internal_static_dossier_PageData_TypeCollection_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jsdossier.proto.PageData.TypeCollection.class, com.github.jsdossier.proto.PageData.TypeCollection.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private java.util.List<com.github.jsdossier.proto.JsType> type_;
    /**
     * <code>repeated .dossier.JsType type = 1;</code>
     */
    public java.util.List<com.github.jsdossier.proto.JsType> getTypeList() {
      return type_;
    }
    /**
     * <code>repeated .dossier.JsType type = 1;</code>
     */
    public java.util.List<? extends com.github.jsdossier.proto.JsTypeOrBuilder> 
        getTypeOrBuilderList() {
      return type_;
    }
    /**
     * <code>repeated .dossier.JsType type = 1;</code>
     */
    public int getTypeCount() {
      return type_.size();
    }
    /**
     * <code>repeated .dossier.JsType type = 1;</code>
     */
    public com.github.jsdossier.proto.JsType getType(int index) {
      return type_.get(index);
    }
    /**
     * <code>repeated .dossier.JsType type = 1;</code>
     */
    public com.github.jsdossier.proto.JsTypeOrBuilder getTypeOrBuilder(
        int index) {
      return type_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < type_.size(); i++) {
        output.writeMessage(1, type_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < type_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, type_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.github.jsdossier.proto.PageData.TypeCollection parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jsdossier.proto.PageData.TypeCollection parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jsdossier.proto.PageData.TypeCollection parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jsdossier.proto.PageData.TypeCollection parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jsdossier.proto.PageData.TypeCollection parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.github.jsdossier.proto.PageData.TypeCollection parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.github.jsdossier.proto.PageData.TypeCollection parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.github.jsdossier.proto.PageData.TypeCollection parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.github.jsdossier.proto.PageData.TypeCollection parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.github.jsdossier.proto.PageData.TypeCollection parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jsdossier.proto.PageData.TypeCollection prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dossier.PageData.TypeCollection}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dossier.PageData.TypeCollection)
        com.github.jsdossier.proto.PageData.TypeCollectionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jsdossier.proto.Dossier.internal_static_dossier_PageData_TypeCollection_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jsdossier.proto.Dossier.internal_static_dossier_PageData_TypeCollection_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jsdossier.proto.PageData.TypeCollection.class, com.github.jsdossier.proto.PageData.TypeCollection.Builder.class);
      }

      // Construct using com.github.jsdossier.proto.PageData.TypeCollection.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTypeFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (typeBuilder_ == null) {
          type_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          typeBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jsdossier.proto.Dossier.internal_static_dossier_PageData_TypeCollection_descriptor;
      }

      public com.github.jsdossier.proto.PageData.TypeCollection getDefaultInstanceForType() {
        return com.github.jsdossier.proto.PageData.TypeCollection.getDefaultInstance();
      }

      public com.github.jsdossier.proto.PageData.TypeCollection build() {
        com.github.jsdossier.proto.PageData.TypeCollection result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jsdossier.proto.PageData.TypeCollection buildPartial() {
        com.github.jsdossier.proto.PageData.TypeCollection result = new com.github.jsdossier.proto.PageData.TypeCollection(this);
        int from_bitField0_ = bitField0_;
        if (typeBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            type_ = java.util.Collections.unmodifiableList(type_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.type_ = type_;
        } else {
          result.type_ = typeBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jsdossier.proto.PageData.TypeCollection) {
          return mergeFrom((com.github.jsdossier.proto.PageData.TypeCollection)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jsdossier.proto.PageData.TypeCollection other) {
        if (other == com.github.jsdossier.proto.PageData.TypeCollection.getDefaultInstance()) return this;
        if (typeBuilder_ == null) {
          if (!other.type_.isEmpty()) {
            if (type_.isEmpty()) {
              type_ = other.type_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTypeIsMutable();
              type_.addAll(other.type_);
            }
            onChanged();
          }
        } else {
          if (!other.type_.isEmpty()) {
            if (typeBuilder_.isEmpty()) {
              typeBuilder_.dispose();
              typeBuilder_ = null;
              type_ = other.type_;
              bitField0_ = (bitField0_ & ~0x00000001);
              typeBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTypeFieldBuilder() : null;
            } else {
              typeBuilder_.addAllMessages(other.type_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jsdossier.proto.PageData.TypeCollection parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jsdossier.proto.PageData.TypeCollection) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.github.jsdossier.proto.JsType> type_ =
        java.util.Collections.emptyList();
      private void ensureTypeIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          type_ = new java.util.ArrayList<com.github.jsdossier.proto.JsType>(type_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.github.jsdossier.proto.JsType, com.github.jsdossier.proto.JsType.Builder, com.github.jsdossier.proto.JsTypeOrBuilder> typeBuilder_;

      /**
       * <code>repeated .dossier.JsType type = 1;</code>
       */
      public java.util.List<com.github.jsdossier.proto.JsType> getTypeList() {
        if (typeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(type_);
        } else {
          return typeBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dossier.JsType type = 1;</code>
       */
      public int getTypeCount() {
        if (typeBuilder_ == null) {
          return type_.size();
        } else {
          return typeBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dossier.JsType type = 1;</code>
       */
      public com.github.jsdossier.proto.JsType getType(int index) {
        if (typeBuilder_ == null) {
          return type_.get(index);
        } else {
          return typeBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dossier.JsType type = 1;</code>
       */
      public Builder setType(
          int index, com.github.jsdossier.proto.JsType value) {
        if (typeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTypeIsMutable();
          type_.set(index, value);
          onChanged();
        } else {
          typeBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dossier.JsType type = 1;</code>
       */
      public Builder setType(
          int index, com.github.jsdossier.proto.JsType.Builder builderForValue) {
        if (typeBuilder_ == null) {
          ensureTypeIsMutable();
          type_.set(index, builderForValue.build());
          onChanged();
        } else {
          typeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dossier.JsType type = 1;</code>
       */
      public Builder addType(com.github.jsdossier.proto.JsType value) {
        if (typeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTypeIsMutable();
          type_.add(value);
          onChanged();
        } else {
          typeBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dossier.JsType type = 1;</code>
       */
      public Builder addType(
          int index, com.github.jsdossier.proto.JsType value) {
        if (typeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTypeIsMutable();
          type_.add(index, value);
          onChanged();
        } else {
          typeBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dossier.JsType type = 1;</code>
       */
      public Builder addType(
          com.github.jsdossier.proto.JsType.Builder builderForValue) {
        if (typeBuilder_ == null) {
          ensureTypeIsMutable();
          type_.add(builderForValue.build());
          onChanged();
        } else {
          typeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dossier.JsType type = 1;</code>
       */
      public Builder addType(
          int index, com.github.jsdossier.proto.JsType.Builder builderForValue) {
        if (typeBuilder_ == null) {
          ensureTypeIsMutable();
          type_.add(index, builderForValue.build());
          onChanged();
        } else {
          typeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dossier.JsType type = 1;</code>
       */
      public Builder addAllType(
          java.lang.Iterable<? extends com.github.jsdossier.proto.JsType> values) {
        if (typeBuilder_ == null) {
          ensureTypeIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, type_);
          onChanged();
        } else {
          typeBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dossier.JsType type = 1;</code>
       */
      public Builder clearType() {
        if (typeBuilder_ == null) {
          type_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          typeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dossier.JsType type = 1;</code>
       */
      public Builder removeType(int index) {
        if (typeBuilder_ == null) {
          ensureTypeIsMutable();
          type_.remove(index);
          onChanged();
        } else {
          typeBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dossier.JsType type = 1;</code>
       */
      public com.github.jsdossier.proto.JsType.Builder getTypeBuilder(
          int index) {
        return getTypeFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dossier.JsType type = 1;</code>
       */
      public com.github.jsdossier.proto.JsTypeOrBuilder getTypeOrBuilder(
          int index) {
        if (typeBuilder_ == null) {
          return type_.get(index);  } else {
          return typeBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dossier.JsType type = 1;</code>
       */
      public java.util.List<? extends com.github.jsdossier.proto.JsTypeOrBuilder> 
           getTypeOrBuilderList() {
        if (typeBuilder_ != null) {
          return typeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(type_);
        }
      }
      /**
       * <code>repeated .dossier.JsType type = 1;</code>
       */
      public com.github.jsdossier.proto.JsType.Builder addTypeBuilder() {
        return getTypeFieldBuilder().addBuilder(
            com.github.jsdossier.proto.JsType.getDefaultInstance());
      }
      /**
       * <code>repeated .dossier.JsType type = 1;</code>
       */
      public com.github.jsdossier.proto.JsType.Builder addTypeBuilder(
          int index) {
        return getTypeFieldBuilder().addBuilder(
            index, com.github.jsdossier.proto.JsType.getDefaultInstance());
      }
      /**
       * <code>repeated .dossier.JsType type = 1;</code>
       */
      public java.util.List<com.github.jsdossier.proto.JsType.Builder> 
           getTypeBuilderList() {
        return getTypeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.github.jsdossier.proto.JsType, com.github.jsdossier.proto.JsType.Builder, com.github.jsdossier.proto.JsTypeOrBuilder> 
          getTypeFieldBuilder() {
        if (typeBuilder_ == null) {
          typeBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.github.jsdossier.proto.JsType, com.github.jsdossier.proto.JsType.Builder, com.github.jsdossier.proto.JsTypeOrBuilder>(
                  type_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        return typeBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dossier.PageData.TypeCollection)
    }

    // @@protoc_insertion_point(class_scope:dossier.PageData.TypeCollection)
    private static final com.github.jsdossier.proto.PageData.TypeCollection DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jsdossier.proto.PageData.TypeCollection();
    }

    public static com.github.jsdossier.proto.PageData.TypeCollection getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TypeCollection>
        PARSER = new com.google.protobuf.AbstractParser<TypeCollection>() {
      public TypeCollection parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new TypeCollection(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<TypeCollection> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TypeCollection> getParserForType() {
      return PARSER;
    }

    public com.github.jsdossier.proto.PageData.TypeCollection getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int contentCase_ = 0;
  private java.lang.Object content_;
  public enum ContentCase
      implements com.google.protobuf.Internal.EnumLite {
    TYPES(2),
    MARKDOWN(3),
    FILE(4),
    CONTENT_NOT_SET(0);
    private int value = 0;
    private ContentCase(int value) {
      this.value = value;
    }
    public static ContentCase valueOf(int value) {
      switch (value) {
        case 2: return TYPES;
        case 3: return MARKDOWN;
        case 4: return FILE;
        case 0: return CONTENT_NOT_SET;
        default: throw new java.lang.IllegalArgumentException(
          "Value is undefined for this oneof enum.");
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ContentCase
  getContentCase() {
    return ContentCase.valueOf(
        contentCase_);
  }

  public static final int RESOURCES_FIELD_NUMBER = 1;
  private com.github.jsdossier.proto.Resources resources_;
  /**
   * <code>optional .dossier.Resources resources = 1;</code>
   */
  public boolean hasResources() {
    return resources_ != null;
  }
  /**
   * <code>optional .dossier.Resources resources = 1;</code>
   */
  public com.github.jsdossier.proto.Resources getResources() {
    return resources_ == null ? com.github.jsdossier.proto.Resources.getDefaultInstance() : resources_;
  }
  /**
   * <code>optional .dossier.Resources resources = 1;</code>
   */
  public com.github.jsdossier.proto.ResourcesOrBuilder getResourcesOrBuilder() {
    return getResources();
  }

  public static final int TYPES_FIELD_NUMBER = 2;
  /**
   * <code>optional .dossier.PageData.TypeCollection types = 2;</code>
   */
  public com.github.jsdossier.proto.PageData.TypeCollection getTypes() {
    if (contentCase_ == 2) {
       return (com.github.jsdossier.proto.PageData.TypeCollection) content_;
    }
    return com.github.jsdossier.proto.PageData.TypeCollection.getDefaultInstance();
  }
  /**
   * <code>optional .dossier.PageData.TypeCollection types = 2;</code>
   */
  public com.github.jsdossier.proto.PageData.TypeCollectionOrBuilder getTypesOrBuilder() {
    if (contentCase_ == 2) {
       return (com.github.jsdossier.proto.PageData.TypeCollection) content_;
    }
    return com.github.jsdossier.proto.PageData.TypeCollection.getDefaultInstance();
  }

  public static final int MARKDOWN_FIELD_NUMBER = 3;
  /**
   * <code>optional .dossier.PageData.Markdown markdown = 3;</code>
   */
  public com.github.jsdossier.proto.PageData.Markdown getMarkdown() {
    if (contentCase_ == 3) {
       return (com.github.jsdossier.proto.PageData.Markdown) content_;
    }
    return com.github.jsdossier.proto.PageData.Markdown.getDefaultInstance();
  }
  /**
   * <code>optional .dossier.PageData.Markdown markdown = 3;</code>
   */
  public com.github.jsdossier.proto.PageData.MarkdownOrBuilder getMarkdownOrBuilder() {
    if (contentCase_ == 3) {
       return (com.github.jsdossier.proto.PageData.Markdown) content_;
    }
    return com.github.jsdossier.proto.PageData.Markdown.getDefaultInstance();
  }

  public static final int FILE_FIELD_NUMBER = 4;
  /**
   * <code>optional .dossier.SourceFile file = 4;</code>
   */
  public com.github.jsdossier.proto.SourceFile getFile() {
    if (contentCase_ == 4) {
       return (com.github.jsdossier.proto.SourceFile) content_;
    }
    return com.github.jsdossier.proto.SourceFile.getDefaultInstance();
  }
  /**
   * <code>optional .dossier.SourceFile file = 4;</code>
   */
  public com.github.jsdossier.proto.SourceFileOrBuilder getFileOrBuilder() {
    if (contentCase_ == 4) {
       return (com.github.jsdossier.proto.SourceFile) content_;
    }
    return com.github.jsdossier.proto.SourceFile.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (resources_ != null) {
      output.writeMessage(1, getResources());
    }
    if (contentCase_ == 2) {
      output.writeMessage(2, (com.github.jsdossier.proto.PageData.TypeCollection) content_);
    }
    if (contentCase_ == 3) {
      output.writeMessage(3, (com.github.jsdossier.proto.PageData.Markdown) content_);
    }
    if (contentCase_ == 4) {
      output.writeMessage(4, (com.github.jsdossier.proto.SourceFile) content_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (resources_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getResources());
    }
    if (contentCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (com.github.jsdossier.proto.PageData.TypeCollection) content_);
    }
    if (contentCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (com.github.jsdossier.proto.PageData.Markdown) content_);
    }
    if (contentCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (com.github.jsdossier.proto.SourceFile) content_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  public static com.github.jsdossier.proto.PageData parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.jsdossier.proto.PageData parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.jsdossier.proto.PageData parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.jsdossier.proto.PageData parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.jsdossier.proto.PageData parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.github.jsdossier.proto.PageData parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static com.github.jsdossier.proto.PageData parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static com.github.jsdossier.proto.PageData parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static com.github.jsdossier.proto.PageData parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.github.jsdossier.proto.PageData parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.github.jsdossier.proto.PageData prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code dossier.PageData}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:dossier.PageData)
      com.github.jsdossier.proto.PageDataOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jsdossier.proto.Dossier.internal_static_dossier_PageData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jsdossier.proto.Dossier.internal_static_dossier_PageData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jsdossier.proto.PageData.class, com.github.jsdossier.proto.PageData.Builder.class);
    }

    // Construct using com.github.jsdossier.proto.PageData.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      if (resourcesBuilder_ == null) {
        resources_ = null;
      } else {
        resources_ = null;
        resourcesBuilder_ = null;
      }
      contentCase_ = 0;
      content_ = null;
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.github.jsdossier.proto.Dossier.internal_static_dossier_PageData_descriptor;
    }

    public com.github.jsdossier.proto.PageData getDefaultInstanceForType() {
      return com.github.jsdossier.proto.PageData.getDefaultInstance();
    }

    public com.github.jsdossier.proto.PageData build() {
      com.github.jsdossier.proto.PageData result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.github.jsdossier.proto.PageData buildPartial() {
      com.github.jsdossier.proto.PageData result = new com.github.jsdossier.proto.PageData(this);
      if (resourcesBuilder_ == null) {
        result.resources_ = resources_;
      } else {
        result.resources_ = resourcesBuilder_.build();
      }
      if (contentCase_ == 2) {
        if (typesBuilder_ == null) {
          result.content_ = content_;
        } else {
          result.content_ = typesBuilder_.build();
        }
      }
      if (contentCase_ == 3) {
        if (markdownBuilder_ == null) {
          result.content_ = content_;
        } else {
          result.content_ = markdownBuilder_.build();
        }
      }
      if (contentCase_ == 4) {
        if (fileBuilder_ == null) {
          result.content_ = content_;
        } else {
          result.content_ = fileBuilder_.build();
        }
      }
      result.contentCase_ = contentCase_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.github.jsdossier.proto.PageData) {
        return mergeFrom((com.github.jsdossier.proto.PageData)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.github.jsdossier.proto.PageData other) {
      if (other == com.github.jsdossier.proto.PageData.getDefaultInstance()) return this;
      if (other.hasResources()) {
        mergeResources(other.getResources());
      }
      switch (other.getContentCase()) {
        case TYPES: {
          mergeTypes(other.getTypes());
          break;
        }
        case MARKDOWN: {
          mergeMarkdown(other.getMarkdown());
          break;
        }
        case FILE: {
          mergeFile(other.getFile());
          break;
        }
        case CONTENT_NOT_SET: {
          break;
        }
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.github.jsdossier.proto.PageData parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.github.jsdossier.proto.PageData) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int contentCase_ = 0;
    private java.lang.Object content_;
    public ContentCase
        getContentCase() {
      return ContentCase.valueOf(
          contentCase_);
    }

    public Builder clearContent() {
      contentCase_ = 0;
      content_ = null;
      onChanged();
      return this;
    }


    private com.github.jsdossier.proto.Resources resources_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.Resources, com.github.jsdossier.proto.Resources.Builder, com.github.jsdossier.proto.ResourcesOrBuilder> resourcesBuilder_;
    /**
     * <code>optional .dossier.Resources resources = 1;</code>
     */
    public boolean hasResources() {
      return resourcesBuilder_ != null || resources_ != null;
    }
    /**
     * <code>optional .dossier.Resources resources = 1;</code>
     */
    public com.github.jsdossier.proto.Resources getResources() {
      if (resourcesBuilder_ == null) {
        return resources_ == null ? com.github.jsdossier.proto.Resources.getDefaultInstance() : resources_;
      } else {
        return resourcesBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .dossier.Resources resources = 1;</code>
     */
    public Builder setResources(com.github.jsdossier.proto.Resources value) {
      if (resourcesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        resources_ = value;
        onChanged();
      } else {
        resourcesBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .dossier.Resources resources = 1;</code>
     */
    public Builder setResources(
        com.github.jsdossier.proto.Resources.Builder builderForValue) {
      if (resourcesBuilder_ == null) {
        resources_ = builderForValue.build();
        onChanged();
      } else {
        resourcesBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .dossier.Resources resources = 1;</code>
     */
    public Builder mergeResources(com.github.jsdossier.proto.Resources value) {
      if (resourcesBuilder_ == null) {
        if (resources_ != null) {
          resources_ =
            com.github.jsdossier.proto.Resources.newBuilder(resources_).mergeFrom(value).buildPartial();
        } else {
          resources_ = value;
        }
        onChanged();
      } else {
        resourcesBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .dossier.Resources resources = 1;</code>
     */
    public Builder clearResources() {
      if (resourcesBuilder_ == null) {
        resources_ = null;
        onChanged();
      } else {
        resources_ = null;
        resourcesBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .dossier.Resources resources = 1;</code>
     */
    public com.github.jsdossier.proto.Resources.Builder getResourcesBuilder() {
      
      onChanged();
      return getResourcesFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .dossier.Resources resources = 1;</code>
     */
    public com.github.jsdossier.proto.ResourcesOrBuilder getResourcesOrBuilder() {
      if (resourcesBuilder_ != null) {
        return resourcesBuilder_.getMessageOrBuilder();
      } else {
        return resources_ == null ?
            com.github.jsdossier.proto.Resources.getDefaultInstance() : resources_;
      }
    }
    /**
     * <code>optional .dossier.Resources resources = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.Resources, com.github.jsdossier.proto.Resources.Builder, com.github.jsdossier.proto.ResourcesOrBuilder> 
        getResourcesFieldBuilder() {
      if (resourcesBuilder_ == null) {
        resourcesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.jsdossier.proto.Resources, com.github.jsdossier.proto.Resources.Builder, com.github.jsdossier.proto.ResourcesOrBuilder>(
                getResources(),
                getParentForChildren(),
                isClean());
        resources_ = null;
      }
      return resourcesBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.PageData.TypeCollection, com.github.jsdossier.proto.PageData.TypeCollection.Builder, com.github.jsdossier.proto.PageData.TypeCollectionOrBuilder> typesBuilder_;
    /**
     * <code>optional .dossier.PageData.TypeCollection types = 2;</code>
     */
    public com.github.jsdossier.proto.PageData.TypeCollection getTypes() {
      if (typesBuilder_ == null) {
        if (contentCase_ == 2) {
          return (com.github.jsdossier.proto.PageData.TypeCollection) content_;
        }
        return com.github.jsdossier.proto.PageData.TypeCollection.getDefaultInstance();
      } else {
        if (contentCase_ == 2) {
          return typesBuilder_.getMessage();
        }
        return com.github.jsdossier.proto.PageData.TypeCollection.getDefaultInstance();
      }
    }
    /**
     * <code>optional .dossier.PageData.TypeCollection types = 2;</code>
     */
    public Builder setTypes(com.github.jsdossier.proto.PageData.TypeCollection value) {
      if (typesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        content_ = value;
        onChanged();
      } else {
        typesBuilder_.setMessage(value);
      }
      contentCase_ = 2;
      return this;
    }
    /**
     * <code>optional .dossier.PageData.TypeCollection types = 2;</code>
     */
    public Builder setTypes(
        com.github.jsdossier.proto.PageData.TypeCollection.Builder builderForValue) {
      if (typesBuilder_ == null) {
        content_ = builderForValue.build();
        onChanged();
      } else {
        typesBuilder_.setMessage(builderForValue.build());
      }
      contentCase_ = 2;
      return this;
    }
    /**
     * <code>optional .dossier.PageData.TypeCollection types = 2;</code>
     */
    public Builder mergeTypes(com.github.jsdossier.proto.PageData.TypeCollection value) {
      if (typesBuilder_ == null) {
        if (contentCase_ == 2 &&
            content_ != com.github.jsdossier.proto.PageData.TypeCollection.getDefaultInstance()) {
          content_ = com.github.jsdossier.proto.PageData.TypeCollection.newBuilder((com.github.jsdossier.proto.PageData.TypeCollection) content_)
              .mergeFrom(value).buildPartial();
        } else {
          content_ = value;
        }
        onChanged();
      } else {
        if (contentCase_ == 2) {
          typesBuilder_.mergeFrom(value);
        }
        typesBuilder_.setMessage(value);
      }
      contentCase_ = 2;
      return this;
    }
    /**
     * <code>optional .dossier.PageData.TypeCollection types = 2;</code>
     */
    public Builder clearTypes() {
      if (typesBuilder_ == null) {
        if (contentCase_ == 2) {
          contentCase_ = 0;
          content_ = null;
          onChanged();
        }
      } else {
        if (contentCase_ == 2) {
          contentCase_ = 0;
          content_ = null;
        }
        typesBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>optional .dossier.PageData.TypeCollection types = 2;</code>
     */
    public com.github.jsdossier.proto.PageData.TypeCollection.Builder getTypesBuilder() {
      return getTypesFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .dossier.PageData.TypeCollection types = 2;</code>
     */
    public com.github.jsdossier.proto.PageData.TypeCollectionOrBuilder getTypesOrBuilder() {
      if ((contentCase_ == 2) && (typesBuilder_ != null)) {
        return typesBuilder_.getMessageOrBuilder();
      } else {
        if (contentCase_ == 2) {
          return (com.github.jsdossier.proto.PageData.TypeCollection) content_;
        }
        return com.github.jsdossier.proto.PageData.TypeCollection.getDefaultInstance();
      }
    }
    /**
     * <code>optional .dossier.PageData.TypeCollection types = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.PageData.TypeCollection, com.github.jsdossier.proto.PageData.TypeCollection.Builder, com.github.jsdossier.proto.PageData.TypeCollectionOrBuilder> 
        getTypesFieldBuilder() {
      if (typesBuilder_ == null) {
        if (!(contentCase_ == 2)) {
          content_ = com.github.jsdossier.proto.PageData.TypeCollection.getDefaultInstance();
        }
        typesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.jsdossier.proto.PageData.TypeCollection, com.github.jsdossier.proto.PageData.TypeCollection.Builder, com.github.jsdossier.proto.PageData.TypeCollectionOrBuilder>(
                (com.github.jsdossier.proto.PageData.TypeCollection) content_,
                getParentForChildren(),
                isClean());
        content_ = null;
      }
      contentCase_ = 2;
      onChanged();;
      return typesBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.PageData.Markdown, com.github.jsdossier.proto.PageData.Markdown.Builder, com.github.jsdossier.proto.PageData.MarkdownOrBuilder> markdownBuilder_;
    /**
     * <code>optional .dossier.PageData.Markdown markdown = 3;</code>
     */
    public com.github.jsdossier.proto.PageData.Markdown getMarkdown() {
      if (markdownBuilder_ == null) {
        if (contentCase_ == 3) {
          return (com.github.jsdossier.proto.PageData.Markdown) content_;
        }
        return com.github.jsdossier.proto.PageData.Markdown.getDefaultInstance();
      } else {
        if (contentCase_ == 3) {
          return markdownBuilder_.getMessage();
        }
        return com.github.jsdossier.proto.PageData.Markdown.getDefaultInstance();
      }
    }
    /**
     * <code>optional .dossier.PageData.Markdown markdown = 3;</code>
     */
    public Builder setMarkdown(com.github.jsdossier.proto.PageData.Markdown value) {
      if (markdownBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        content_ = value;
        onChanged();
      } else {
        markdownBuilder_.setMessage(value);
      }
      contentCase_ = 3;
      return this;
    }
    /**
     * <code>optional .dossier.PageData.Markdown markdown = 3;</code>
     */
    public Builder setMarkdown(
        com.github.jsdossier.proto.PageData.Markdown.Builder builderForValue) {
      if (markdownBuilder_ == null) {
        content_ = builderForValue.build();
        onChanged();
      } else {
        markdownBuilder_.setMessage(builderForValue.build());
      }
      contentCase_ = 3;
      return this;
    }
    /**
     * <code>optional .dossier.PageData.Markdown markdown = 3;</code>
     */
    public Builder mergeMarkdown(com.github.jsdossier.proto.PageData.Markdown value) {
      if (markdownBuilder_ == null) {
        if (contentCase_ == 3 &&
            content_ != com.github.jsdossier.proto.PageData.Markdown.getDefaultInstance()) {
          content_ = com.github.jsdossier.proto.PageData.Markdown.newBuilder((com.github.jsdossier.proto.PageData.Markdown) content_)
              .mergeFrom(value).buildPartial();
        } else {
          content_ = value;
        }
        onChanged();
      } else {
        if (contentCase_ == 3) {
          markdownBuilder_.mergeFrom(value);
        }
        markdownBuilder_.setMessage(value);
      }
      contentCase_ = 3;
      return this;
    }
    /**
     * <code>optional .dossier.PageData.Markdown markdown = 3;</code>
     */
    public Builder clearMarkdown() {
      if (markdownBuilder_ == null) {
        if (contentCase_ == 3) {
          contentCase_ = 0;
          content_ = null;
          onChanged();
        }
      } else {
        if (contentCase_ == 3) {
          contentCase_ = 0;
          content_ = null;
        }
        markdownBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>optional .dossier.PageData.Markdown markdown = 3;</code>
     */
    public com.github.jsdossier.proto.PageData.Markdown.Builder getMarkdownBuilder() {
      return getMarkdownFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .dossier.PageData.Markdown markdown = 3;</code>
     */
    public com.github.jsdossier.proto.PageData.MarkdownOrBuilder getMarkdownOrBuilder() {
      if ((contentCase_ == 3) && (markdownBuilder_ != null)) {
        return markdownBuilder_.getMessageOrBuilder();
      } else {
        if (contentCase_ == 3) {
          return (com.github.jsdossier.proto.PageData.Markdown) content_;
        }
        return com.github.jsdossier.proto.PageData.Markdown.getDefaultInstance();
      }
    }
    /**
     * <code>optional .dossier.PageData.Markdown markdown = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.PageData.Markdown, com.github.jsdossier.proto.PageData.Markdown.Builder, com.github.jsdossier.proto.PageData.MarkdownOrBuilder> 
        getMarkdownFieldBuilder() {
      if (markdownBuilder_ == null) {
        if (!(contentCase_ == 3)) {
          content_ = com.github.jsdossier.proto.PageData.Markdown.getDefaultInstance();
        }
        markdownBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.jsdossier.proto.PageData.Markdown, com.github.jsdossier.proto.PageData.Markdown.Builder, com.github.jsdossier.proto.PageData.MarkdownOrBuilder>(
                (com.github.jsdossier.proto.PageData.Markdown) content_,
                getParentForChildren(),
                isClean());
        content_ = null;
      }
      contentCase_ = 3;
      onChanged();;
      return markdownBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.SourceFile, com.github.jsdossier.proto.SourceFile.Builder, com.github.jsdossier.proto.SourceFileOrBuilder> fileBuilder_;
    /**
     * <code>optional .dossier.SourceFile file = 4;</code>
     */
    public com.github.jsdossier.proto.SourceFile getFile() {
      if (fileBuilder_ == null) {
        if (contentCase_ == 4) {
          return (com.github.jsdossier.proto.SourceFile) content_;
        }
        return com.github.jsdossier.proto.SourceFile.getDefaultInstance();
      } else {
        if (contentCase_ == 4) {
          return fileBuilder_.getMessage();
        }
        return com.github.jsdossier.proto.SourceFile.getDefaultInstance();
      }
    }
    /**
     * <code>optional .dossier.SourceFile file = 4;</code>
     */
    public Builder setFile(com.github.jsdossier.proto.SourceFile value) {
      if (fileBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        content_ = value;
        onChanged();
      } else {
        fileBuilder_.setMessage(value);
      }
      contentCase_ = 4;
      return this;
    }
    /**
     * <code>optional .dossier.SourceFile file = 4;</code>
     */
    public Builder setFile(
        com.github.jsdossier.proto.SourceFile.Builder builderForValue) {
      if (fileBuilder_ == null) {
        content_ = builderForValue.build();
        onChanged();
      } else {
        fileBuilder_.setMessage(builderForValue.build());
      }
      contentCase_ = 4;
      return this;
    }
    /**
     * <code>optional .dossier.SourceFile file = 4;</code>
     */
    public Builder mergeFile(com.github.jsdossier.proto.SourceFile value) {
      if (fileBuilder_ == null) {
        if (contentCase_ == 4 &&
            content_ != com.github.jsdossier.proto.SourceFile.getDefaultInstance()) {
          content_ = com.github.jsdossier.proto.SourceFile.newBuilder((com.github.jsdossier.proto.SourceFile) content_)
              .mergeFrom(value).buildPartial();
        } else {
          content_ = value;
        }
        onChanged();
      } else {
        if (contentCase_ == 4) {
          fileBuilder_.mergeFrom(value);
        }
        fileBuilder_.setMessage(value);
      }
      contentCase_ = 4;
      return this;
    }
    /**
     * <code>optional .dossier.SourceFile file = 4;</code>
     */
    public Builder clearFile() {
      if (fileBuilder_ == null) {
        if (contentCase_ == 4) {
          contentCase_ = 0;
          content_ = null;
          onChanged();
        }
      } else {
        if (contentCase_ == 4) {
          contentCase_ = 0;
          content_ = null;
        }
        fileBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>optional .dossier.SourceFile file = 4;</code>
     */
    public com.github.jsdossier.proto.SourceFile.Builder getFileBuilder() {
      return getFileFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .dossier.SourceFile file = 4;</code>
     */
    public com.github.jsdossier.proto.SourceFileOrBuilder getFileOrBuilder() {
      if ((contentCase_ == 4) && (fileBuilder_ != null)) {
        return fileBuilder_.getMessageOrBuilder();
      } else {
        if (contentCase_ == 4) {
          return (com.github.jsdossier.proto.SourceFile) content_;
        }
        return com.github.jsdossier.proto.SourceFile.getDefaultInstance();
      }
    }
    /**
     * <code>optional .dossier.SourceFile file = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.SourceFile, com.github.jsdossier.proto.SourceFile.Builder, com.github.jsdossier.proto.SourceFileOrBuilder> 
        getFileFieldBuilder() {
      if (fileBuilder_ == null) {
        if (!(contentCase_ == 4)) {
          content_ = com.github.jsdossier.proto.SourceFile.getDefaultInstance();
        }
        fileBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.jsdossier.proto.SourceFile, com.github.jsdossier.proto.SourceFile.Builder, com.github.jsdossier.proto.SourceFileOrBuilder>(
                (com.github.jsdossier.proto.SourceFile) content_,
                getParentForChildren(),
                isClean());
        content_ = null;
      }
      contentCase_ = 4;
      onChanged();;
      return fileBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:dossier.PageData)
  }

  // @@protoc_insertion_point(class_scope:dossier.PageData)
  private static final com.github.jsdossier.proto.PageData DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.github.jsdossier.proto.PageData();
  }

  public static com.github.jsdossier.proto.PageData getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PageData>
      PARSER = new com.google.protobuf.AbstractParser<PageData>() {
    public PageData parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      try {
        return new PageData(input, extensionRegistry);
      } catch (RuntimeException e) {
        if (e.getCause() instanceof
            com.google.protobuf.InvalidProtocolBufferException) {
          throw (com.google.protobuf.InvalidProtocolBufferException)
              e.getCause();
        }
        throw e;
      }
    }
  };

  public static com.google.protobuf.Parser<PageData> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PageData> getParserForType() {
    return PARSER;
  }

  public com.github.jsdossier.proto.PageData getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

