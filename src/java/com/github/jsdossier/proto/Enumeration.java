// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dossier.proto

package com.github.jsdossier.proto;

/**
 * Protobuf type {@code dossier.Enumeration}
 *
 * <pre>
 * Describes an enumeration.
 * </pre>
 */
public  final class Enumeration extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:dossier.Enumeration)
    EnumerationOrBuilder {
  // Use Enumeration.newBuilder() to construct.
  private Enumeration(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private Enumeration() {
    value_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private Enumeration(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            com.github.jsdossier.proto.TypeExpression.Builder subBuilder = null;
            if (type_ != null) {
              subBuilder = type_.toBuilder();
            }
            type_ = input.readMessage(com.github.jsdossier.proto.TypeExpression.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(type_);
              type_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              value_ = new java.util.ArrayList<com.github.jsdossier.proto.Enumeration.Value>();
              mutable_bitField0_ |= 0x00000002;
            }
            value_.add(input.readMessage(com.github.jsdossier.proto.Enumeration.Value.parser(), extensionRegistry));
            break;
          }
          case 34: {
            com.github.jsdossier.proto.Visibility.Builder subBuilder = null;
            if (visibility_ != null) {
              subBuilder = visibility_.toBuilder();
            }
            visibility_ = input.readMessage(com.github.jsdossier.proto.Visibility.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(visibility_);
              visibility_ = subBuilder.buildPartial();
            }

            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw new RuntimeException(e.setUnfinishedMessage(this));
    } catch (java.io.IOException e) {
      throw new RuntimeException(
          new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this));
    } finally {
      if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
        value_ = java.util.Collections.unmodifiableList(value_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.github.jsdossier.proto.Dossier.internal_static_dossier_Enumeration_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.github.jsdossier.proto.Dossier.internal_static_dossier_Enumeration_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.github.jsdossier.proto.Enumeration.class, com.github.jsdossier.proto.Enumeration.Builder.class);
  }

  public interface ValueOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dossier.Enumeration.Value)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional .dossier.Comment description = 2;</code>
     */
    boolean hasDescription();
    /**
     * <code>optional .dossier.Comment description = 2;</code>
     */
    com.github.jsdossier.proto.Comment getDescription();
    /**
     * <code>optional .dossier.Comment description = 2;</code>
     */
    com.github.jsdossier.proto.CommentOrBuilder getDescriptionOrBuilder();

    /**
     * <code>optional .dossier.Comment deprecation = 3;</code>
     */
    boolean hasDeprecation();
    /**
     * <code>optional .dossier.Comment deprecation = 3;</code>
     */
    com.github.jsdossier.proto.Comment getDeprecation();
    /**
     * <code>optional .dossier.Comment deprecation = 3;</code>
     */
    com.github.jsdossier.proto.CommentOrBuilder getDeprecationOrBuilder();
  }
  /**
   * Protobuf type {@code dossier.Enumeration.Value}
   */
  public  static final class Value extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dossier.Enumeration.Value)
      ValueOrBuilder {
    // Use Value.newBuilder() to construct.
    private Value(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Value() {
      name_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Value(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 18: {
              com.github.jsdossier.proto.Comment.Builder subBuilder = null;
              if (description_ != null) {
                subBuilder = description_.toBuilder();
              }
              description_ = input.readMessage(com.github.jsdossier.proto.Comment.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(description_);
                description_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              com.github.jsdossier.proto.Comment.Builder subBuilder = null;
              if (deprecation_ != null) {
                subBuilder = deprecation_.toBuilder();
              }
              deprecation_ = input.readMessage(com.github.jsdossier.proto.Comment.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(deprecation_);
                deprecation_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jsdossier.proto.Dossier.internal_static_dossier_Enumeration_Value_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jsdossier.proto.Dossier.internal_static_dossier_Enumeration_Value_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jsdossier.proto.Enumeration.Value.class, com.github.jsdossier.proto.Enumeration.Value.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>optional string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 2;
    private com.github.jsdossier.proto.Comment description_;
    /**
     * <code>optional .dossier.Comment description = 2;</code>
     */
    public boolean hasDescription() {
      return description_ != null;
    }
    /**
     * <code>optional .dossier.Comment description = 2;</code>
     */
    public com.github.jsdossier.proto.Comment getDescription() {
      return description_ == null ? com.github.jsdossier.proto.Comment.getDefaultInstance() : description_;
    }
    /**
     * <code>optional .dossier.Comment description = 2;</code>
     */
    public com.github.jsdossier.proto.CommentOrBuilder getDescriptionOrBuilder() {
      return getDescription();
    }

    public static final int DEPRECATION_FIELD_NUMBER = 3;
    private com.github.jsdossier.proto.Comment deprecation_;
    /**
     * <code>optional .dossier.Comment deprecation = 3;</code>
     */
    public boolean hasDeprecation() {
      return deprecation_ != null;
    }
    /**
     * <code>optional .dossier.Comment deprecation = 3;</code>
     */
    public com.github.jsdossier.proto.Comment getDeprecation() {
      return deprecation_ == null ? com.github.jsdossier.proto.Comment.getDefaultInstance() : deprecation_;
    }
    /**
     * <code>optional .dossier.Comment deprecation = 3;</code>
     */
    public com.github.jsdossier.proto.CommentOrBuilder getDeprecationOrBuilder() {
      return getDeprecation();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, name_);
      }
      if (description_ != null) {
        output.writeMessage(2, getDescription());
      }
      if (deprecation_ != null) {
        output.writeMessage(3, getDeprecation());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, name_);
      }
      if (description_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getDescription());
      }
      if (deprecation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getDeprecation());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.github.jsdossier.proto.Enumeration.Value parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jsdossier.proto.Enumeration.Value parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jsdossier.proto.Enumeration.Value parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.jsdossier.proto.Enumeration.Value parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.jsdossier.proto.Enumeration.Value parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.github.jsdossier.proto.Enumeration.Value parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.github.jsdossier.proto.Enumeration.Value parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.github.jsdossier.proto.Enumeration.Value parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.github.jsdossier.proto.Enumeration.Value parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.github.jsdossier.proto.Enumeration.Value parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.jsdossier.proto.Enumeration.Value prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dossier.Enumeration.Value}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dossier.Enumeration.Value)
        com.github.jsdossier.proto.Enumeration.ValueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.jsdossier.proto.Dossier.internal_static_dossier_Enumeration_Value_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.jsdossier.proto.Dossier.internal_static_dossier_Enumeration_Value_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.jsdossier.proto.Enumeration.Value.class, com.github.jsdossier.proto.Enumeration.Value.Builder.class);
      }

      // Construct using com.github.jsdossier.proto.Enumeration.Value.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";

        if (descriptionBuilder_ == null) {
          description_ = null;
        } else {
          description_ = null;
          descriptionBuilder_ = null;
        }
        if (deprecationBuilder_ == null) {
          deprecation_ = null;
        } else {
          deprecation_ = null;
          deprecationBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.jsdossier.proto.Dossier.internal_static_dossier_Enumeration_Value_descriptor;
      }

      public com.github.jsdossier.proto.Enumeration.Value getDefaultInstanceForType() {
        return com.github.jsdossier.proto.Enumeration.Value.getDefaultInstance();
      }

      public com.github.jsdossier.proto.Enumeration.Value build() {
        com.github.jsdossier.proto.Enumeration.Value result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.jsdossier.proto.Enumeration.Value buildPartial() {
        com.github.jsdossier.proto.Enumeration.Value result = new com.github.jsdossier.proto.Enumeration.Value(this);
        result.name_ = name_;
        if (descriptionBuilder_ == null) {
          result.description_ = description_;
        } else {
          result.description_ = descriptionBuilder_.build();
        }
        if (deprecationBuilder_ == null) {
          result.deprecation_ = deprecation_;
        } else {
          result.deprecation_ = deprecationBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.jsdossier.proto.Enumeration.Value) {
          return mergeFrom((com.github.jsdossier.proto.Enumeration.Value)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.jsdossier.proto.Enumeration.Value other) {
        if (other == com.github.jsdossier.proto.Enumeration.Value.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.hasDescription()) {
          mergeDescription(other.getDescription());
        }
        if (other.hasDeprecation()) {
          mergeDeprecation(other.getDeprecation());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.jsdossier.proto.Enumeration.Value parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.jsdossier.proto.Enumeration.Value) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private com.github.jsdossier.proto.Comment description_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          com.github.jsdossier.proto.Comment, com.github.jsdossier.proto.Comment.Builder, com.github.jsdossier.proto.CommentOrBuilder> descriptionBuilder_;
      /**
       * <code>optional .dossier.Comment description = 2;</code>
       */
      public boolean hasDescription() {
        return descriptionBuilder_ != null || description_ != null;
      }
      /**
       * <code>optional .dossier.Comment description = 2;</code>
       */
      public com.github.jsdossier.proto.Comment getDescription() {
        if (descriptionBuilder_ == null) {
          return description_ == null ? com.github.jsdossier.proto.Comment.getDefaultInstance() : description_;
        } else {
          return descriptionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dossier.Comment description = 2;</code>
       */
      public Builder setDescription(com.github.jsdossier.proto.Comment value) {
        if (descriptionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          description_ = value;
          onChanged();
        } else {
          descriptionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dossier.Comment description = 2;</code>
       */
      public Builder setDescription(
          com.github.jsdossier.proto.Comment.Builder builderForValue) {
        if (descriptionBuilder_ == null) {
          description_ = builderForValue.build();
          onChanged();
        } else {
          descriptionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dossier.Comment description = 2;</code>
       */
      public Builder mergeDescription(com.github.jsdossier.proto.Comment value) {
        if (descriptionBuilder_ == null) {
          if (description_ != null) {
            description_ =
              com.github.jsdossier.proto.Comment.newBuilder(description_).mergeFrom(value).buildPartial();
          } else {
            description_ = value;
          }
          onChanged();
        } else {
          descriptionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dossier.Comment description = 2;</code>
       */
      public Builder clearDescription() {
        if (descriptionBuilder_ == null) {
          description_ = null;
          onChanged();
        } else {
          description_ = null;
          descriptionBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dossier.Comment description = 2;</code>
       */
      public com.github.jsdossier.proto.Comment.Builder getDescriptionBuilder() {
        
        onChanged();
        return getDescriptionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dossier.Comment description = 2;</code>
       */
      public com.github.jsdossier.proto.CommentOrBuilder getDescriptionOrBuilder() {
        if (descriptionBuilder_ != null) {
          return descriptionBuilder_.getMessageOrBuilder();
        } else {
          return description_ == null ?
              com.github.jsdossier.proto.Comment.getDefaultInstance() : description_;
        }
      }
      /**
       * <code>optional .dossier.Comment description = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.github.jsdossier.proto.Comment, com.github.jsdossier.proto.Comment.Builder, com.github.jsdossier.proto.CommentOrBuilder> 
          getDescriptionFieldBuilder() {
        if (descriptionBuilder_ == null) {
          descriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.github.jsdossier.proto.Comment, com.github.jsdossier.proto.Comment.Builder, com.github.jsdossier.proto.CommentOrBuilder>(
                  getDescription(),
                  getParentForChildren(),
                  isClean());
          description_ = null;
        }
        return descriptionBuilder_;
      }

      private com.github.jsdossier.proto.Comment deprecation_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          com.github.jsdossier.proto.Comment, com.github.jsdossier.proto.Comment.Builder, com.github.jsdossier.proto.CommentOrBuilder> deprecationBuilder_;
      /**
       * <code>optional .dossier.Comment deprecation = 3;</code>
       */
      public boolean hasDeprecation() {
        return deprecationBuilder_ != null || deprecation_ != null;
      }
      /**
       * <code>optional .dossier.Comment deprecation = 3;</code>
       */
      public com.github.jsdossier.proto.Comment getDeprecation() {
        if (deprecationBuilder_ == null) {
          return deprecation_ == null ? com.github.jsdossier.proto.Comment.getDefaultInstance() : deprecation_;
        } else {
          return deprecationBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dossier.Comment deprecation = 3;</code>
       */
      public Builder setDeprecation(com.github.jsdossier.proto.Comment value) {
        if (deprecationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          deprecation_ = value;
          onChanged();
        } else {
          deprecationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dossier.Comment deprecation = 3;</code>
       */
      public Builder setDeprecation(
          com.github.jsdossier.proto.Comment.Builder builderForValue) {
        if (deprecationBuilder_ == null) {
          deprecation_ = builderForValue.build();
          onChanged();
        } else {
          deprecationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dossier.Comment deprecation = 3;</code>
       */
      public Builder mergeDeprecation(com.github.jsdossier.proto.Comment value) {
        if (deprecationBuilder_ == null) {
          if (deprecation_ != null) {
            deprecation_ =
              com.github.jsdossier.proto.Comment.newBuilder(deprecation_).mergeFrom(value).buildPartial();
          } else {
            deprecation_ = value;
          }
          onChanged();
        } else {
          deprecationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dossier.Comment deprecation = 3;</code>
       */
      public Builder clearDeprecation() {
        if (deprecationBuilder_ == null) {
          deprecation_ = null;
          onChanged();
        } else {
          deprecation_ = null;
          deprecationBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dossier.Comment deprecation = 3;</code>
       */
      public com.github.jsdossier.proto.Comment.Builder getDeprecationBuilder() {
        
        onChanged();
        return getDeprecationFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dossier.Comment deprecation = 3;</code>
       */
      public com.github.jsdossier.proto.CommentOrBuilder getDeprecationOrBuilder() {
        if (deprecationBuilder_ != null) {
          return deprecationBuilder_.getMessageOrBuilder();
        } else {
          return deprecation_ == null ?
              com.github.jsdossier.proto.Comment.getDefaultInstance() : deprecation_;
        }
      }
      /**
       * <code>optional .dossier.Comment deprecation = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.github.jsdossier.proto.Comment, com.github.jsdossier.proto.Comment.Builder, com.github.jsdossier.proto.CommentOrBuilder> 
          getDeprecationFieldBuilder() {
        if (deprecationBuilder_ == null) {
          deprecationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.github.jsdossier.proto.Comment, com.github.jsdossier.proto.Comment.Builder, com.github.jsdossier.proto.CommentOrBuilder>(
                  getDeprecation(),
                  getParentForChildren(),
                  isClean());
          deprecation_ = null;
        }
        return deprecationBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dossier.Enumeration.Value)
    }

    // @@protoc_insertion_point(class_scope:dossier.Enumeration.Value)
    private static final com.github.jsdossier.proto.Enumeration.Value DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.jsdossier.proto.Enumeration.Value();
    }

    public static com.github.jsdossier.proto.Enumeration.Value getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Value>
        PARSER = new com.google.protobuf.AbstractParser<Value>() {
      public Value parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Value(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Value> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Value> getParserForType() {
      return PARSER;
    }

    public com.github.jsdossier.proto.Enumeration.Value getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int bitField0_;
  public static final int TYPE_FIELD_NUMBER = 1;
  private com.github.jsdossier.proto.TypeExpression type_;
  /**
   * <code>optional .dossier.expression.TypeExpression type = 1;</code>
   */
  public boolean hasType() {
    return type_ != null;
  }
  /**
   * <code>optional .dossier.expression.TypeExpression type = 1;</code>
   */
  public com.github.jsdossier.proto.TypeExpression getType() {
    return type_ == null ? com.github.jsdossier.proto.TypeExpression.getDefaultInstance() : type_;
  }
  /**
   * <code>optional .dossier.expression.TypeExpression type = 1;</code>
   */
  public com.github.jsdossier.proto.TypeExpressionOrBuilder getTypeOrBuilder() {
    return getType();
  }

  public static final int VALUE_FIELD_NUMBER = 2;
  private java.util.List<com.github.jsdossier.proto.Enumeration.Value> value_;
  /**
   * <code>repeated .dossier.Enumeration.Value value = 2;</code>
   */
  public java.util.List<com.github.jsdossier.proto.Enumeration.Value> getValueList() {
    return value_;
  }
  /**
   * <code>repeated .dossier.Enumeration.Value value = 2;</code>
   */
  public java.util.List<? extends com.github.jsdossier.proto.Enumeration.ValueOrBuilder> 
      getValueOrBuilderList() {
    return value_;
  }
  /**
   * <code>repeated .dossier.Enumeration.Value value = 2;</code>
   */
  public int getValueCount() {
    return value_.size();
  }
  /**
   * <code>repeated .dossier.Enumeration.Value value = 2;</code>
   */
  public com.github.jsdossier.proto.Enumeration.Value getValue(int index) {
    return value_.get(index);
  }
  /**
   * <code>repeated .dossier.Enumeration.Value value = 2;</code>
   */
  public com.github.jsdossier.proto.Enumeration.ValueOrBuilder getValueOrBuilder(
      int index) {
    return value_.get(index);
  }

  public static final int VISIBILITY_FIELD_NUMBER = 4;
  private com.github.jsdossier.proto.Visibility visibility_;
  /**
   * <code>optional .dossier.Visibility visibility = 4;</code>
   */
  public boolean hasVisibility() {
    return visibility_ != null;
  }
  /**
   * <code>optional .dossier.Visibility visibility = 4;</code>
   */
  public com.github.jsdossier.proto.Visibility getVisibility() {
    return visibility_ == null ? com.github.jsdossier.proto.Visibility.getDefaultInstance() : visibility_;
  }
  /**
   * <code>optional .dossier.Visibility visibility = 4;</code>
   */
  public com.github.jsdossier.proto.VisibilityOrBuilder getVisibilityOrBuilder() {
    return getVisibility();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (type_ != null) {
      output.writeMessage(1, getType());
    }
    for (int i = 0; i < value_.size(); i++) {
      output.writeMessage(2, value_.get(i));
    }
    if (visibility_ != null) {
      output.writeMessage(4, getVisibility());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (type_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getType());
    }
    for (int i = 0; i < value_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, value_.get(i));
    }
    if (visibility_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getVisibility());
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  public static com.github.jsdossier.proto.Enumeration parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.jsdossier.proto.Enumeration parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.jsdossier.proto.Enumeration parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.jsdossier.proto.Enumeration parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.jsdossier.proto.Enumeration parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.github.jsdossier.proto.Enumeration parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static com.github.jsdossier.proto.Enumeration parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static com.github.jsdossier.proto.Enumeration parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static com.github.jsdossier.proto.Enumeration parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.github.jsdossier.proto.Enumeration parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.github.jsdossier.proto.Enumeration prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code dossier.Enumeration}
   *
   * <pre>
   * Describes an enumeration.
   * </pre>
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:dossier.Enumeration)
      com.github.jsdossier.proto.EnumerationOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jsdossier.proto.Dossier.internal_static_dossier_Enumeration_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jsdossier.proto.Dossier.internal_static_dossier_Enumeration_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jsdossier.proto.Enumeration.class, com.github.jsdossier.proto.Enumeration.Builder.class);
    }

    // Construct using com.github.jsdossier.proto.Enumeration.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        getValueFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      if (typeBuilder_ == null) {
        type_ = null;
      } else {
        type_ = null;
        typeBuilder_ = null;
      }
      if (valueBuilder_ == null) {
        value_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        valueBuilder_.clear();
      }
      if (visibilityBuilder_ == null) {
        visibility_ = null;
      } else {
        visibility_ = null;
        visibilityBuilder_ = null;
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.github.jsdossier.proto.Dossier.internal_static_dossier_Enumeration_descriptor;
    }

    public com.github.jsdossier.proto.Enumeration getDefaultInstanceForType() {
      return com.github.jsdossier.proto.Enumeration.getDefaultInstance();
    }

    public com.github.jsdossier.proto.Enumeration build() {
      com.github.jsdossier.proto.Enumeration result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.github.jsdossier.proto.Enumeration buildPartial() {
      com.github.jsdossier.proto.Enumeration result = new com.github.jsdossier.proto.Enumeration(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (typeBuilder_ == null) {
        result.type_ = type_;
      } else {
        result.type_ = typeBuilder_.build();
      }
      if (valueBuilder_ == null) {
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = java.util.Collections.unmodifiableList(value_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.value_ = value_;
      } else {
        result.value_ = valueBuilder_.build();
      }
      if (visibilityBuilder_ == null) {
        result.visibility_ = visibility_;
      } else {
        result.visibility_ = visibilityBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.github.jsdossier.proto.Enumeration) {
        return mergeFrom((com.github.jsdossier.proto.Enumeration)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.github.jsdossier.proto.Enumeration other) {
      if (other == com.github.jsdossier.proto.Enumeration.getDefaultInstance()) return this;
      if (other.hasType()) {
        mergeType(other.getType());
      }
      if (valueBuilder_ == null) {
        if (!other.value_.isEmpty()) {
          if (value_.isEmpty()) {
            value_ = other.value_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureValueIsMutable();
            value_.addAll(other.value_);
          }
          onChanged();
        }
      } else {
        if (!other.value_.isEmpty()) {
          if (valueBuilder_.isEmpty()) {
            valueBuilder_.dispose();
            valueBuilder_ = null;
            value_ = other.value_;
            bitField0_ = (bitField0_ & ~0x00000002);
            valueBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getValueFieldBuilder() : null;
          } else {
            valueBuilder_.addAllMessages(other.value_);
          }
        }
      }
      if (other.hasVisibility()) {
        mergeVisibility(other.getVisibility());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.github.jsdossier.proto.Enumeration parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.github.jsdossier.proto.Enumeration) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.github.jsdossier.proto.TypeExpression type_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.TypeExpression, com.github.jsdossier.proto.TypeExpression.Builder, com.github.jsdossier.proto.TypeExpressionOrBuilder> typeBuilder_;
    /**
     * <code>optional .dossier.expression.TypeExpression type = 1;</code>
     */
    public boolean hasType() {
      return typeBuilder_ != null || type_ != null;
    }
    /**
     * <code>optional .dossier.expression.TypeExpression type = 1;</code>
     */
    public com.github.jsdossier.proto.TypeExpression getType() {
      if (typeBuilder_ == null) {
        return type_ == null ? com.github.jsdossier.proto.TypeExpression.getDefaultInstance() : type_;
      } else {
        return typeBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .dossier.expression.TypeExpression type = 1;</code>
     */
    public Builder setType(com.github.jsdossier.proto.TypeExpression value) {
      if (typeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        typeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .dossier.expression.TypeExpression type = 1;</code>
     */
    public Builder setType(
        com.github.jsdossier.proto.TypeExpression.Builder builderForValue) {
      if (typeBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        typeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .dossier.expression.TypeExpression type = 1;</code>
     */
    public Builder mergeType(com.github.jsdossier.proto.TypeExpression value) {
      if (typeBuilder_ == null) {
        if (type_ != null) {
          type_ =
            com.github.jsdossier.proto.TypeExpression.newBuilder(type_).mergeFrom(value).buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        typeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .dossier.expression.TypeExpression type = 1;</code>
     */
    public Builder clearType() {
      if (typeBuilder_ == null) {
        type_ = null;
        onChanged();
      } else {
        type_ = null;
        typeBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .dossier.expression.TypeExpression type = 1;</code>
     */
    public com.github.jsdossier.proto.TypeExpression.Builder getTypeBuilder() {
      
      onChanged();
      return getTypeFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .dossier.expression.TypeExpression type = 1;</code>
     */
    public com.github.jsdossier.proto.TypeExpressionOrBuilder getTypeOrBuilder() {
      if (typeBuilder_ != null) {
        return typeBuilder_.getMessageOrBuilder();
      } else {
        return type_ == null ?
            com.github.jsdossier.proto.TypeExpression.getDefaultInstance() : type_;
      }
    }
    /**
     * <code>optional .dossier.expression.TypeExpression type = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.TypeExpression, com.github.jsdossier.proto.TypeExpression.Builder, com.github.jsdossier.proto.TypeExpressionOrBuilder> 
        getTypeFieldBuilder() {
      if (typeBuilder_ == null) {
        typeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.jsdossier.proto.TypeExpression, com.github.jsdossier.proto.TypeExpression.Builder, com.github.jsdossier.proto.TypeExpressionOrBuilder>(
                getType(),
                getParentForChildren(),
                isClean());
        type_ = null;
      }
      return typeBuilder_;
    }

    private java.util.List<com.github.jsdossier.proto.Enumeration.Value> value_ =
      java.util.Collections.emptyList();
    private void ensureValueIsMutable() {
      if (!((bitField0_ & 0x00000002) == 0x00000002)) {
        value_ = new java.util.ArrayList<com.github.jsdossier.proto.Enumeration.Value>(value_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        com.github.jsdossier.proto.Enumeration.Value, com.github.jsdossier.proto.Enumeration.Value.Builder, com.github.jsdossier.proto.Enumeration.ValueOrBuilder> valueBuilder_;

    /**
     * <code>repeated .dossier.Enumeration.Value value = 2;</code>
     */
    public java.util.List<com.github.jsdossier.proto.Enumeration.Value> getValueList() {
      if (valueBuilder_ == null) {
        return java.util.Collections.unmodifiableList(value_);
      } else {
        return valueBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .dossier.Enumeration.Value value = 2;</code>
     */
    public int getValueCount() {
      if (valueBuilder_ == null) {
        return value_.size();
      } else {
        return valueBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .dossier.Enumeration.Value value = 2;</code>
     */
    public com.github.jsdossier.proto.Enumeration.Value getValue(int index) {
      if (valueBuilder_ == null) {
        return value_.get(index);
      } else {
        return valueBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .dossier.Enumeration.Value value = 2;</code>
     */
    public Builder setValue(
        int index, com.github.jsdossier.proto.Enumeration.Value value) {
      if (valueBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValueIsMutable();
        value_.set(index, value);
        onChanged();
      } else {
        valueBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .dossier.Enumeration.Value value = 2;</code>
     */
    public Builder setValue(
        int index, com.github.jsdossier.proto.Enumeration.Value.Builder builderForValue) {
      if (valueBuilder_ == null) {
        ensureValueIsMutable();
        value_.set(index, builderForValue.build());
        onChanged();
      } else {
        valueBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .dossier.Enumeration.Value value = 2;</code>
     */
    public Builder addValue(com.github.jsdossier.proto.Enumeration.Value value) {
      if (valueBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValueIsMutable();
        value_.add(value);
        onChanged();
      } else {
        valueBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .dossier.Enumeration.Value value = 2;</code>
     */
    public Builder addValue(
        int index, com.github.jsdossier.proto.Enumeration.Value value) {
      if (valueBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValueIsMutable();
        value_.add(index, value);
        onChanged();
      } else {
        valueBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .dossier.Enumeration.Value value = 2;</code>
     */
    public Builder addValue(
        com.github.jsdossier.proto.Enumeration.Value.Builder builderForValue) {
      if (valueBuilder_ == null) {
        ensureValueIsMutable();
        value_.add(builderForValue.build());
        onChanged();
      } else {
        valueBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .dossier.Enumeration.Value value = 2;</code>
     */
    public Builder addValue(
        int index, com.github.jsdossier.proto.Enumeration.Value.Builder builderForValue) {
      if (valueBuilder_ == null) {
        ensureValueIsMutable();
        value_.add(index, builderForValue.build());
        onChanged();
      } else {
        valueBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .dossier.Enumeration.Value value = 2;</code>
     */
    public Builder addAllValue(
        java.lang.Iterable<? extends com.github.jsdossier.proto.Enumeration.Value> values) {
      if (valueBuilder_ == null) {
        ensureValueIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, value_);
        onChanged();
      } else {
        valueBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .dossier.Enumeration.Value value = 2;</code>
     */
    public Builder clearValue() {
      if (valueBuilder_ == null) {
        value_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        valueBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .dossier.Enumeration.Value value = 2;</code>
     */
    public Builder removeValue(int index) {
      if (valueBuilder_ == null) {
        ensureValueIsMutable();
        value_.remove(index);
        onChanged();
      } else {
        valueBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .dossier.Enumeration.Value value = 2;</code>
     */
    public com.github.jsdossier.proto.Enumeration.Value.Builder getValueBuilder(
        int index) {
      return getValueFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .dossier.Enumeration.Value value = 2;</code>
     */
    public com.github.jsdossier.proto.Enumeration.ValueOrBuilder getValueOrBuilder(
        int index) {
      if (valueBuilder_ == null) {
        return value_.get(index);  } else {
        return valueBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .dossier.Enumeration.Value value = 2;</code>
     */
    public java.util.List<? extends com.github.jsdossier.proto.Enumeration.ValueOrBuilder> 
         getValueOrBuilderList() {
      if (valueBuilder_ != null) {
        return valueBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(value_);
      }
    }
    /**
     * <code>repeated .dossier.Enumeration.Value value = 2;</code>
     */
    public com.github.jsdossier.proto.Enumeration.Value.Builder addValueBuilder() {
      return getValueFieldBuilder().addBuilder(
          com.github.jsdossier.proto.Enumeration.Value.getDefaultInstance());
    }
    /**
     * <code>repeated .dossier.Enumeration.Value value = 2;</code>
     */
    public com.github.jsdossier.proto.Enumeration.Value.Builder addValueBuilder(
        int index) {
      return getValueFieldBuilder().addBuilder(
          index, com.github.jsdossier.proto.Enumeration.Value.getDefaultInstance());
    }
    /**
     * <code>repeated .dossier.Enumeration.Value value = 2;</code>
     */
    public java.util.List<com.github.jsdossier.proto.Enumeration.Value.Builder> 
         getValueBuilderList() {
      return getValueFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        com.github.jsdossier.proto.Enumeration.Value, com.github.jsdossier.proto.Enumeration.Value.Builder, com.github.jsdossier.proto.Enumeration.ValueOrBuilder> 
        getValueFieldBuilder() {
      if (valueBuilder_ == null) {
        valueBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            com.github.jsdossier.proto.Enumeration.Value, com.github.jsdossier.proto.Enumeration.Value.Builder, com.github.jsdossier.proto.Enumeration.ValueOrBuilder>(
                value_,
                ((bitField0_ & 0x00000002) == 0x00000002),
                getParentForChildren(),
                isClean());
        value_ = null;
      }
      return valueBuilder_;
    }

    private com.github.jsdossier.proto.Visibility visibility_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.Visibility, com.github.jsdossier.proto.Visibility.Builder, com.github.jsdossier.proto.VisibilityOrBuilder> visibilityBuilder_;
    /**
     * <code>optional .dossier.Visibility visibility = 4;</code>
     */
    public boolean hasVisibility() {
      return visibilityBuilder_ != null || visibility_ != null;
    }
    /**
     * <code>optional .dossier.Visibility visibility = 4;</code>
     */
    public com.github.jsdossier.proto.Visibility getVisibility() {
      if (visibilityBuilder_ == null) {
        return visibility_ == null ? com.github.jsdossier.proto.Visibility.getDefaultInstance() : visibility_;
      } else {
        return visibilityBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .dossier.Visibility visibility = 4;</code>
     */
    public Builder setVisibility(com.github.jsdossier.proto.Visibility value) {
      if (visibilityBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        visibility_ = value;
        onChanged();
      } else {
        visibilityBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .dossier.Visibility visibility = 4;</code>
     */
    public Builder setVisibility(
        com.github.jsdossier.proto.Visibility.Builder builderForValue) {
      if (visibilityBuilder_ == null) {
        visibility_ = builderForValue.build();
        onChanged();
      } else {
        visibilityBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .dossier.Visibility visibility = 4;</code>
     */
    public Builder mergeVisibility(com.github.jsdossier.proto.Visibility value) {
      if (visibilityBuilder_ == null) {
        if (visibility_ != null) {
          visibility_ =
            com.github.jsdossier.proto.Visibility.newBuilder(visibility_).mergeFrom(value).buildPartial();
        } else {
          visibility_ = value;
        }
        onChanged();
      } else {
        visibilityBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .dossier.Visibility visibility = 4;</code>
     */
    public Builder clearVisibility() {
      if (visibilityBuilder_ == null) {
        visibility_ = null;
        onChanged();
      } else {
        visibility_ = null;
        visibilityBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .dossier.Visibility visibility = 4;</code>
     */
    public com.github.jsdossier.proto.Visibility.Builder getVisibilityBuilder() {
      
      onChanged();
      return getVisibilityFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .dossier.Visibility visibility = 4;</code>
     */
    public com.github.jsdossier.proto.VisibilityOrBuilder getVisibilityOrBuilder() {
      if (visibilityBuilder_ != null) {
        return visibilityBuilder_.getMessageOrBuilder();
      } else {
        return visibility_ == null ?
            com.github.jsdossier.proto.Visibility.getDefaultInstance() : visibility_;
      }
    }
    /**
     * <code>optional .dossier.Visibility visibility = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.Visibility, com.github.jsdossier.proto.Visibility.Builder, com.github.jsdossier.proto.VisibilityOrBuilder> 
        getVisibilityFieldBuilder() {
      if (visibilityBuilder_ == null) {
        visibilityBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.jsdossier.proto.Visibility, com.github.jsdossier.proto.Visibility.Builder, com.github.jsdossier.proto.VisibilityOrBuilder>(
                getVisibility(),
                getParentForChildren(),
                isClean());
        visibility_ = null;
      }
      return visibilityBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:dossier.Enumeration)
  }

  // @@protoc_insertion_point(class_scope:dossier.Enumeration)
  private static final com.github.jsdossier.proto.Enumeration DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.github.jsdossier.proto.Enumeration();
  }

  public static com.github.jsdossier.proto.Enumeration getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Enumeration>
      PARSER = new com.google.protobuf.AbstractParser<Enumeration>() {
    public Enumeration parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      try {
        return new Enumeration(input, extensionRegistry);
      } catch (RuntimeException e) {
        if (e.getCause() instanceof
            com.google.protobuf.InvalidProtocolBufferException) {
          throw (com.google.protobuf.InvalidProtocolBufferException)
              e.getCause();
        }
        throw e;
      }
    }
  };

  public static com.google.protobuf.Parser<Enumeration> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Enumeration> getParserForType() {
    return PARSER;
  }

  public com.github.jsdossier.proto.Enumeration getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

