// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: expression.proto

package com.github.jsdossier.proto;

/**
 * Protobuf type {@code dossier.expression.FunctionType}
 */
public  final class FunctionType extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:dossier.expression.FunctionType)
    FunctionTypeOrBuilder {
  // Use FunctionType.newBuilder() to construct.
  private FunctionType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private FunctionType() {
    isConstructor_ = false;
    parameter_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private FunctionType(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 8: {

            isConstructor_ = input.readBool();
            break;
          }
          case 18: {
            com.github.jsdossier.proto.TypeExpression.Builder subBuilder = null;
            if (instanceType_ != null) {
              subBuilder = instanceType_.toBuilder();
            }
            instanceType_ = input.readMessage(com.github.jsdossier.proto.TypeExpression.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(instanceType_);
              instanceType_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              parameter_ = new java.util.ArrayList<com.github.jsdossier.proto.TypeExpression>();
              mutable_bitField0_ |= 0x00000004;
            }
            parameter_.add(input.readMessage(com.github.jsdossier.proto.TypeExpression.parser(), extensionRegistry));
            break;
          }
          case 34: {
            com.github.jsdossier.proto.TypeExpression.Builder subBuilder = null;
            if (returnType_ != null) {
              subBuilder = returnType_.toBuilder();
            }
            returnType_ = input.readMessage(com.github.jsdossier.proto.TypeExpression.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(returnType_);
              returnType_ = subBuilder.buildPartial();
            }

            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw new RuntimeException(e.setUnfinishedMessage(this));
    } catch (java.io.IOException e) {
      throw new RuntimeException(
          new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this));
    } finally {
      if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
        parameter_ = java.util.Collections.unmodifiableList(parameter_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.github.jsdossier.proto.Expression.internal_static_dossier_expression_FunctionType_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.github.jsdossier.proto.Expression.internal_static_dossier_expression_FunctionType_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.github.jsdossier.proto.FunctionType.class, com.github.jsdossier.proto.FunctionType.Builder.class);
  }

  private int bitField0_;
  public static final int IS_CONSTRUCTOR_FIELD_NUMBER = 1;
  private boolean isConstructor_;
  /**
   * <code>optional bool is_constructor = 1;</code>
   */
  public boolean getIsConstructor() {
    return isConstructor_;
  }

  public static final int INSTANCE_TYPE_FIELD_NUMBER = 2;
  private com.github.jsdossier.proto.TypeExpression instanceType_;
  /**
   * <code>optional .dossier.expression.TypeExpression instance_type = 2;</code>
   */
  public boolean hasInstanceType() {
    return instanceType_ != null;
  }
  /**
   * <code>optional .dossier.expression.TypeExpression instance_type = 2;</code>
   */
  public com.github.jsdossier.proto.TypeExpression getInstanceType() {
    return instanceType_ == null ? com.github.jsdossier.proto.TypeExpression.getDefaultInstance() : instanceType_;
  }
  /**
   * <code>optional .dossier.expression.TypeExpression instance_type = 2;</code>
   */
  public com.github.jsdossier.proto.TypeExpressionOrBuilder getInstanceTypeOrBuilder() {
    return getInstanceType();
  }

  public static final int PARAMETER_FIELD_NUMBER = 3;
  private java.util.List<com.github.jsdossier.proto.TypeExpression> parameter_;
  /**
   * <code>repeated .dossier.expression.TypeExpression parameter = 3;</code>
   */
  public java.util.List<com.github.jsdossier.proto.TypeExpression> getParameterList() {
    return parameter_;
  }
  /**
   * <code>repeated .dossier.expression.TypeExpression parameter = 3;</code>
   */
  public java.util.List<? extends com.github.jsdossier.proto.TypeExpressionOrBuilder> 
      getParameterOrBuilderList() {
    return parameter_;
  }
  /**
   * <code>repeated .dossier.expression.TypeExpression parameter = 3;</code>
   */
  public int getParameterCount() {
    return parameter_.size();
  }
  /**
   * <code>repeated .dossier.expression.TypeExpression parameter = 3;</code>
   */
  public com.github.jsdossier.proto.TypeExpression getParameter(int index) {
    return parameter_.get(index);
  }
  /**
   * <code>repeated .dossier.expression.TypeExpression parameter = 3;</code>
   */
  public com.github.jsdossier.proto.TypeExpressionOrBuilder getParameterOrBuilder(
      int index) {
    return parameter_.get(index);
  }

  public static final int RETURN_TYPE_FIELD_NUMBER = 4;
  private com.github.jsdossier.proto.TypeExpression returnType_;
  /**
   * <code>optional .dossier.expression.TypeExpression return_type = 4;</code>
   */
  public boolean hasReturnType() {
    return returnType_ != null;
  }
  /**
   * <code>optional .dossier.expression.TypeExpression return_type = 4;</code>
   */
  public com.github.jsdossier.proto.TypeExpression getReturnType() {
    return returnType_ == null ? com.github.jsdossier.proto.TypeExpression.getDefaultInstance() : returnType_;
  }
  /**
   * <code>optional .dossier.expression.TypeExpression return_type = 4;</code>
   */
  public com.github.jsdossier.proto.TypeExpressionOrBuilder getReturnTypeOrBuilder() {
    return getReturnType();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (isConstructor_ != false) {
      output.writeBool(1, isConstructor_);
    }
    if (instanceType_ != null) {
      output.writeMessage(2, getInstanceType());
    }
    for (int i = 0; i < parameter_.size(); i++) {
      output.writeMessage(3, parameter_.get(i));
    }
    if (returnType_ != null) {
      output.writeMessage(4, getReturnType());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (isConstructor_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, isConstructor_);
    }
    if (instanceType_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getInstanceType());
    }
    for (int i = 0; i < parameter_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, parameter_.get(i));
    }
    if (returnType_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getReturnType());
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  public static com.github.jsdossier.proto.FunctionType parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.jsdossier.proto.FunctionType parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.jsdossier.proto.FunctionType parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.jsdossier.proto.FunctionType parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.jsdossier.proto.FunctionType parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.github.jsdossier.proto.FunctionType parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static com.github.jsdossier.proto.FunctionType parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static com.github.jsdossier.proto.FunctionType parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static com.github.jsdossier.proto.FunctionType parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.github.jsdossier.proto.FunctionType parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.github.jsdossier.proto.FunctionType prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code dossier.expression.FunctionType}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:dossier.expression.FunctionType)
      com.github.jsdossier.proto.FunctionTypeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jsdossier.proto.Expression.internal_static_dossier_expression_FunctionType_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jsdossier.proto.Expression.internal_static_dossier_expression_FunctionType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jsdossier.proto.FunctionType.class, com.github.jsdossier.proto.FunctionType.Builder.class);
    }

    // Construct using com.github.jsdossier.proto.FunctionType.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        getParameterFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      isConstructor_ = false;

      if (instanceTypeBuilder_ == null) {
        instanceType_ = null;
      } else {
        instanceType_ = null;
        instanceTypeBuilder_ = null;
      }
      if (parameterBuilder_ == null) {
        parameter_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        parameterBuilder_.clear();
      }
      if (returnTypeBuilder_ == null) {
        returnType_ = null;
      } else {
        returnType_ = null;
        returnTypeBuilder_ = null;
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.github.jsdossier.proto.Expression.internal_static_dossier_expression_FunctionType_descriptor;
    }

    public com.github.jsdossier.proto.FunctionType getDefaultInstanceForType() {
      return com.github.jsdossier.proto.FunctionType.getDefaultInstance();
    }

    public com.github.jsdossier.proto.FunctionType build() {
      com.github.jsdossier.proto.FunctionType result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.github.jsdossier.proto.FunctionType buildPartial() {
      com.github.jsdossier.proto.FunctionType result = new com.github.jsdossier.proto.FunctionType(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.isConstructor_ = isConstructor_;
      if (instanceTypeBuilder_ == null) {
        result.instanceType_ = instanceType_;
      } else {
        result.instanceType_ = instanceTypeBuilder_.build();
      }
      if (parameterBuilder_ == null) {
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          parameter_ = java.util.Collections.unmodifiableList(parameter_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.parameter_ = parameter_;
      } else {
        result.parameter_ = parameterBuilder_.build();
      }
      if (returnTypeBuilder_ == null) {
        result.returnType_ = returnType_;
      } else {
        result.returnType_ = returnTypeBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.github.jsdossier.proto.FunctionType) {
        return mergeFrom((com.github.jsdossier.proto.FunctionType)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.github.jsdossier.proto.FunctionType other) {
      if (other == com.github.jsdossier.proto.FunctionType.getDefaultInstance()) return this;
      if (other.getIsConstructor() != false) {
        setIsConstructor(other.getIsConstructor());
      }
      if (other.hasInstanceType()) {
        mergeInstanceType(other.getInstanceType());
      }
      if (parameterBuilder_ == null) {
        if (!other.parameter_.isEmpty()) {
          if (parameter_.isEmpty()) {
            parameter_ = other.parameter_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureParameterIsMutable();
            parameter_.addAll(other.parameter_);
          }
          onChanged();
        }
      } else {
        if (!other.parameter_.isEmpty()) {
          if (parameterBuilder_.isEmpty()) {
            parameterBuilder_.dispose();
            parameterBuilder_ = null;
            parameter_ = other.parameter_;
            bitField0_ = (bitField0_ & ~0x00000004);
            parameterBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getParameterFieldBuilder() : null;
          } else {
            parameterBuilder_.addAllMessages(other.parameter_);
          }
        }
      }
      if (other.hasReturnType()) {
        mergeReturnType(other.getReturnType());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.github.jsdossier.proto.FunctionType parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.github.jsdossier.proto.FunctionType) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private boolean isConstructor_ ;
    /**
     * <code>optional bool is_constructor = 1;</code>
     */
    public boolean getIsConstructor() {
      return isConstructor_;
    }
    /**
     * <code>optional bool is_constructor = 1;</code>
     */
    public Builder setIsConstructor(boolean value) {
      
      isConstructor_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bool is_constructor = 1;</code>
     */
    public Builder clearIsConstructor() {
      
      isConstructor_ = false;
      onChanged();
      return this;
    }

    private com.github.jsdossier.proto.TypeExpression instanceType_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.TypeExpression, com.github.jsdossier.proto.TypeExpression.Builder, com.github.jsdossier.proto.TypeExpressionOrBuilder> instanceTypeBuilder_;
    /**
     * <code>optional .dossier.expression.TypeExpression instance_type = 2;</code>
     */
    public boolean hasInstanceType() {
      return instanceTypeBuilder_ != null || instanceType_ != null;
    }
    /**
     * <code>optional .dossier.expression.TypeExpression instance_type = 2;</code>
     */
    public com.github.jsdossier.proto.TypeExpression getInstanceType() {
      if (instanceTypeBuilder_ == null) {
        return instanceType_ == null ? com.github.jsdossier.proto.TypeExpression.getDefaultInstance() : instanceType_;
      } else {
        return instanceTypeBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .dossier.expression.TypeExpression instance_type = 2;</code>
     */
    public Builder setInstanceType(com.github.jsdossier.proto.TypeExpression value) {
      if (instanceTypeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        instanceType_ = value;
        onChanged();
      } else {
        instanceTypeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .dossier.expression.TypeExpression instance_type = 2;</code>
     */
    public Builder setInstanceType(
        com.github.jsdossier.proto.TypeExpression.Builder builderForValue) {
      if (instanceTypeBuilder_ == null) {
        instanceType_ = builderForValue.build();
        onChanged();
      } else {
        instanceTypeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .dossier.expression.TypeExpression instance_type = 2;</code>
     */
    public Builder mergeInstanceType(com.github.jsdossier.proto.TypeExpression value) {
      if (instanceTypeBuilder_ == null) {
        if (instanceType_ != null) {
          instanceType_ =
            com.github.jsdossier.proto.TypeExpression.newBuilder(instanceType_).mergeFrom(value).buildPartial();
        } else {
          instanceType_ = value;
        }
        onChanged();
      } else {
        instanceTypeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .dossier.expression.TypeExpression instance_type = 2;</code>
     */
    public Builder clearInstanceType() {
      if (instanceTypeBuilder_ == null) {
        instanceType_ = null;
        onChanged();
      } else {
        instanceType_ = null;
        instanceTypeBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .dossier.expression.TypeExpression instance_type = 2;</code>
     */
    public com.github.jsdossier.proto.TypeExpression.Builder getInstanceTypeBuilder() {
      
      onChanged();
      return getInstanceTypeFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .dossier.expression.TypeExpression instance_type = 2;</code>
     */
    public com.github.jsdossier.proto.TypeExpressionOrBuilder getInstanceTypeOrBuilder() {
      if (instanceTypeBuilder_ != null) {
        return instanceTypeBuilder_.getMessageOrBuilder();
      } else {
        return instanceType_ == null ?
            com.github.jsdossier.proto.TypeExpression.getDefaultInstance() : instanceType_;
      }
    }
    /**
     * <code>optional .dossier.expression.TypeExpression instance_type = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.TypeExpression, com.github.jsdossier.proto.TypeExpression.Builder, com.github.jsdossier.proto.TypeExpressionOrBuilder> 
        getInstanceTypeFieldBuilder() {
      if (instanceTypeBuilder_ == null) {
        instanceTypeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.jsdossier.proto.TypeExpression, com.github.jsdossier.proto.TypeExpression.Builder, com.github.jsdossier.proto.TypeExpressionOrBuilder>(
                getInstanceType(),
                getParentForChildren(),
                isClean());
        instanceType_ = null;
      }
      return instanceTypeBuilder_;
    }

    private java.util.List<com.github.jsdossier.proto.TypeExpression> parameter_ =
      java.util.Collections.emptyList();
    private void ensureParameterIsMutable() {
      if (!((bitField0_ & 0x00000004) == 0x00000004)) {
        parameter_ = new java.util.ArrayList<com.github.jsdossier.proto.TypeExpression>(parameter_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        com.github.jsdossier.proto.TypeExpression, com.github.jsdossier.proto.TypeExpression.Builder, com.github.jsdossier.proto.TypeExpressionOrBuilder> parameterBuilder_;

    /**
     * <code>repeated .dossier.expression.TypeExpression parameter = 3;</code>
     */
    public java.util.List<com.github.jsdossier.proto.TypeExpression> getParameterList() {
      if (parameterBuilder_ == null) {
        return java.util.Collections.unmodifiableList(parameter_);
      } else {
        return parameterBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .dossier.expression.TypeExpression parameter = 3;</code>
     */
    public int getParameterCount() {
      if (parameterBuilder_ == null) {
        return parameter_.size();
      } else {
        return parameterBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .dossier.expression.TypeExpression parameter = 3;</code>
     */
    public com.github.jsdossier.proto.TypeExpression getParameter(int index) {
      if (parameterBuilder_ == null) {
        return parameter_.get(index);
      } else {
        return parameterBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .dossier.expression.TypeExpression parameter = 3;</code>
     */
    public Builder setParameter(
        int index, com.github.jsdossier.proto.TypeExpression value) {
      if (parameterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureParameterIsMutable();
        parameter_.set(index, value);
        onChanged();
      } else {
        parameterBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .dossier.expression.TypeExpression parameter = 3;</code>
     */
    public Builder setParameter(
        int index, com.github.jsdossier.proto.TypeExpression.Builder builderForValue) {
      if (parameterBuilder_ == null) {
        ensureParameterIsMutable();
        parameter_.set(index, builderForValue.build());
        onChanged();
      } else {
        parameterBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .dossier.expression.TypeExpression parameter = 3;</code>
     */
    public Builder addParameter(com.github.jsdossier.proto.TypeExpression value) {
      if (parameterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureParameterIsMutable();
        parameter_.add(value);
        onChanged();
      } else {
        parameterBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .dossier.expression.TypeExpression parameter = 3;</code>
     */
    public Builder addParameter(
        int index, com.github.jsdossier.proto.TypeExpression value) {
      if (parameterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureParameterIsMutable();
        parameter_.add(index, value);
        onChanged();
      } else {
        parameterBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .dossier.expression.TypeExpression parameter = 3;</code>
     */
    public Builder addParameter(
        com.github.jsdossier.proto.TypeExpression.Builder builderForValue) {
      if (parameterBuilder_ == null) {
        ensureParameterIsMutable();
        parameter_.add(builderForValue.build());
        onChanged();
      } else {
        parameterBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .dossier.expression.TypeExpression parameter = 3;</code>
     */
    public Builder addParameter(
        int index, com.github.jsdossier.proto.TypeExpression.Builder builderForValue) {
      if (parameterBuilder_ == null) {
        ensureParameterIsMutable();
        parameter_.add(index, builderForValue.build());
        onChanged();
      } else {
        parameterBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .dossier.expression.TypeExpression parameter = 3;</code>
     */
    public Builder addAllParameter(
        java.lang.Iterable<? extends com.github.jsdossier.proto.TypeExpression> values) {
      if (parameterBuilder_ == null) {
        ensureParameterIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, parameter_);
        onChanged();
      } else {
        parameterBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .dossier.expression.TypeExpression parameter = 3;</code>
     */
    public Builder clearParameter() {
      if (parameterBuilder_ == null) {
        parameter_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        parameterBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .dossier.expression.TypeExpression parameter = 3;</code>
     */
    public Builder removeParameter(int index) {
      if (parameterBuilder_ == null) {
        ensureParameterIsMutable();
        parameter_.remove(index);
        onChanged();
      } else {
        parameterBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .dossier.expression.TypeExpression parameter = 3;</code>
     */
    public com.github.jsdossier.proto.TypeExpression.Builder getParameterBuilder(
        int index) {
      return getParameterFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .dossier.expression.TypeExpression parameter = 3;</code>
     */
    public com.github.jsdossier.proto.TypeExpressionOrBuilder getParameterOrBuilder(
        int index) {
      if (parameterBuilder_ == null) {
        return parameter_.get(index);  } else {
        return parameterBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .dossier.expression.TypeExpression parameter = 3;</code>
     */
    public java.util.List<? extends com.github.jsdossier.proto.TypeExpressionOrBuilder> 
         getParameterOrBuilderList() {
      if (parameterBuilder_ != null) {
        return parameterBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(parameter_);
      }
    }
    /**
     * <code>repeated .dossier.expression.TypeExpression parameter = 3;</code>
     */
    public com.github.jsdossier.proto.TypeExpression.Builder addParameterBuilder() {
      return getParameterFieldBuilder().addBuilder(
          com.github.jsdossier.proto.TypeExpression.getDefaultInstance());
    }
    /**
     * <code>repeated .dossier.expression.TypeExpression parameter = 3;</code>
     */
    public com.github.jsdossier.proto.TypeExpression.Builder addParameterBuilder(
        int index) {
      return getParameterFieldBuilder().addBuilder(
          index, com.github.jsdossier.proto.TypeExpression.getDefaultInstance());
    }
    /**
     * <code>repeated .dossier.expression.TypeExpression parameter = 3;</code>
     */
    public java.util.List<com.github.jsdossier.proto.TypeExpression.Builder> 
         getParameterBuilderList() {
      return getParameterFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        com.github.jsdossier.proto.TypeExpression, com.github.jsdossier.proto.TypeExpression.Builder, com.github.jsdossier.proto.TypeExpressionOrBuilder> 
        getParameterFieldBuilder() {
      if (parameterBuilder_ == null) {
        parameterBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            com.github.jsdossier.proto.TypeExpression, com.github.jsdossier.proto.TypeExpression.Builder, com.github.jsdossier.proto.TypeExpressionOrBuilder>(
                parameter_,
                ((bitField0_ & 0x00000004) == 0x00000004),
                getParentForChildren(),
                isClean());
        parameter_ = null;
      }
      return parameterBuilder_;
    }

    private com.github.jsdossier.proto.TypeExpression returnType_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.TypeExpression, com.github.jsdossier.proto.TypeExpression.Builder, com.github.jsdossier.proto.TypeExpressionOrBuilder> returnTypeBuilder_;
    /**
     * <code>optional .dossier.expression.TypeExpression return_type = 4;</code>
     */
    public boolean hasReturnType() {
      return returnTypeBuilder_ != null || returnType_ != null;
    }
    /**
     * <code>optional .dossier.expression.TypeExpression return_type = 4;</code>
     */
    public com.github.jsdossier.proto.TypeExpression getReturnType() {
      if (returnTypeBuilder_ == null) {
        return returnType_ == null ? com.github.jsdossier.proto.TypeExpression.getDefaultInstance() : returnType_;
      } else {
        return returnTypeBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .dossier.expression.TypeExpression return_type = 4;</code>
     */
    public Builder setReturnType(com.github.jsdossier.proto.TypeExpression value) {
      if (returnTypeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        returnType_ = value;
        onChanged();
      } else {
        returnTypeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .dossier.expression.TypeExpression return_type = 4;</code>
     */
    public Builder setReturnType(
        com.github.jsdossier.proto.TypeExpression.Builder builderForValue) {
      if (returnTypeBuilder_ == null) {
        returnType_ = builderForValue.build();
        onChanged();
      } else {
        returnTypeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .dossier.expression.TypeExpression return_type = 4;</code>
     */
    public Builder mergeReturnType(com.github.jsdossier.proto.TypeExpression value) {
      if (returnTypeBuilder_ == null) {
        if (returnType_ != null) {
          returnType_ =
            com.github.jsdossier.proto.TypeExpression.newBuilder(returnType_).mergeFrom(value).buildPartial();
        } else {
          returnType_ = value;
        }
        onChanged();
      } else {
        returnTypeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .dossier.expression.TypeExpression return_type = 4;</code>
     */
    public Builder clearReturnType() {
      if (returnTypeBuilder_ == null) {
        returnType_ = null;
        onChanged();
      } else {
        returnType_ = null;
        returnTypeBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .dossier.expression.TypeExpression return_type = 4;</code>
     */
    public com.github.jsdossier.proto.TypeExpression.Builder getReturnTypeBuilder() {
      
      onChanged();
      return getReturnTypeFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .dossier.expression.TypeExpression return_type = 4;</code>
     */
    public com.github.jsdossier.proto.TypeExpressionOrBuilder getReturnTypeOrBuilder() {
      if (returnTypeBuilder_ != null) {
        return returnTypeBuilder_.getMessageOrBuilder();
      } else {
        return returnType_ == null ?
            com.github.jsdossier.proto.TypeExpression.getDefaultInstance() : returnType_;
      }
    }
    /**
     * <code>optional .dossier.expression.TypeExpression return_type = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.TypeExpression, com.github.jsdossier.proto.TypeExpression.Builder, com.github.jsdossier.proto.TypeExpressionOrBuilder> 
        getReturnTypeFieldBuilder() {
      if (returnTypeBuilder_ == null) {
        returnTypeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.jsdossier.proto.TypeExpression, com.github.jsdossier.proto.TypeExpression.Builder, com.github.jsdossier.proto.TypeExpressionOrBuilder>(
                getReturnType(),
                getParentForChildren(),
                isClean());
        returnType_ = null;
      }
      return returnTypeBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:dossier.expression.FunctionType)
  }

  // @@protoc_insertion_point(class_scope:dossier.expression.FunctionType)
  private static final com.github.jsdossier.proto.FunctionType DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.github.jsdossier.proto.FunctionType();
  }

  public static com.github.jsdossier.proto.FunctionType getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<FunctionType>
      PARSER = new com.google.protobuf.AbstractParser<FunctionType>() {
    public FunctionType parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      try {
        return new FunctionType(input, extensionRegistry);
      } catch (RuntimeException e) {
        if (e.getCause() instanceof
            com.google.protobuf.InvalidProtocolBufferException) {
          throw (com.google.protobuf.InvalidProtocolBufferException)
              e.getCause();
        }
        throw e;
      }
    }
  };

  public static com.google.protobuf.Parser<FunctionType> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<FunctionType> getParserForType() {
    return PARSER;
  }

  public com.github.jsdossier.proto.FunctionType getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

