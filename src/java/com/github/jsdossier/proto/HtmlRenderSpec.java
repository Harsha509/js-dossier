// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dossier.proto

package com.github.jsdossier.proto;

/**
 * Protobuf type {@code dossier.HtmlRenderSpec}
 *
 * <pre>
 * Describes how to render a generic HTML page.
 * </pre>
 */
public  final class HtmlRenderSpec extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:dossier.HtmlRenderSpec)
    HtmlRenderSpecOrBuilder {
  // Use HtmlRenderSpec.newBuilder() to construct.
  private HtmlRenderSpec(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private HtmlRenderSpec() {
    title_ = "";
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private HtmlRenderSpec(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            com.github.jsdossier.proto.Resources.Builder subBuilder = null;
            if (resources_ != null) {
              subBuilder = resources_.toBuilder();
            }
            resources_ = input.readMessage(com.github.jsdossier.proto.Resources.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(resources_);
              resources_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            title_ = s;
            break;
          }
          case 26: {
            com.github.jsdossier.proto.Comment.Builder subBuilder = null;
            if (content_ != null) {
              subBuilder = content_.toBuilder();
            }
            content_ = input.readMessage(com.github.jsdossier.proto.Comment.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(content_);
              content_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            com.github.jsdossier.proto.Index.Builder subBuilder = null;
            if (index_ != null) {
              subBuilder = index_.toBuilder();
            }
            index_ = input.readMessage(com.github.jsdossier.proto.Index.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(index_);
              index_ = subBuilder.buildPartial();
            }

            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw new RuntimeException(e.setUnfinishedMessage(this));
    } catch (java.io.IOException e) {
      throw new RuntimeException(
          new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this));
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.github.jsdossier.proto.Dossier.internal_static_dossier_HtmlRenderSpec_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.github.jsdossier.proto.Dossier.internal_static_dossier_HtmlRenderSpec_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.github.jsdossier.proto.HtmlRenderSpec.class, com.github.jsdossier.proto.HtmlRenderSpec.Builder.class);
  }

  public static final int RESOURCES_FIELD_NUMBER = 1;
  private com.github.jsdossier.proto.Resources resources_;
  /**
   * <code>optional .dossier.Resources resources = 1;</code>
   *
   * <pre>
   * The resources to include.
   * </pre>
   */
  public boolean hasResources() {
    return resources_ != null;
  }
  /**
   * <code>optional .dossier.Resources resources = 1;</code>
   *
   * <pre>
   * The resources to include.
   * </pre>
   */
  public com.github.jsdossier.proto.Resources getResources() {
    return resources_ == null ? com.github.jsdossier.proto.Resources.getDefaultInstance() : resources_;
  }
  /**
   * <code>optional .dossier.Resources resources = 1;</code>
   *
   * <pre>
   * The resources to include.
   * </pre>
   */
  public com.github.jsdossier.proto.ResourcesOrBuilder getResourcesOrBuilder() {
    return getResources();
  }

  public static final int TITLE_FIELD_NUMBER = 2;
  private volatile java.lang.Object title_;
  /**
   * <code>optional string title = 2;</code>
   *
   * <pre>
   * The page title.
   * </pre>
   */
  public java.lang.String getTitle() {
    java.lang.Object ref = title_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      title_ = s;
      return s;
    }
  }
  /**
   * <code>optional string title = 2;</code>
   *
   * <pre>
   * The page title.
   * </pre>
   */
  public com.google.protobuf.ByteString
      getTitleBytes() {
    java.lang.Object ref = title_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      title_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CONTENT_FIELD_NUMBER = 3;
  private com.github.jsdossier.proto.Comment content_;
  /**
   * <code>optional .dossier.Comment content = 3;</code>
   *
   * <pre>
   * The page content, if any.
   * </pre>
   */
  public boolean hasContent() {
    return content_ != null;
  }
  /**
   * <code>optional .dossier.Comment content = 3;</code>
   *
   * <pre>
   * The page content, if any.
   * </pre>
   */
  public com.github.jsdossier.proto.Comment getContent() {
    return content_ == null ? com.github.jsdossier.proto.Comment.getDefaultInstance() : content_;
  }
  /**
   * <code>optional .dossier.Comment content = 3;</code>
   *
   * <pre>
   * The page content, if any.
   * </pre>
   */
  public com.github.jsdossier.proto.CommentOrBuilder getContentOrBuilder() {
    return getContent();
  }

  public static final int INDEX_FIELD_NUMBER = 4;
  private com.github.jsdossier.proto.Index index_;
  /**
   * <code>optional .dossier.Index index = 4;</code>
   *
   * <pre>
   * Navigation index.
   * </pre>
   */
  public boolean hasIndex() {
    return index_ != null;
  }
  /**
   * <code>optional .dossier.Index index = 4;</code>
   *
   * <pre>
   * Navigation index.
   * </pre>
   */
  public com.github.jsdossier.proto.Index getIndex() {
    return index_ == null ? com.github.jsdossier.proto.Index.getDefaultInstance() : index_;
  }
  /**
   * <code>optional .dossier.Index index = 4;</code>
   *
   * <pre>
   * Navigation index.
   * </pre>
   */
  public com.github.jsdossier.proto.IndexOrBuilder getIndexOrBuilder() {
    return getIndex();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (resources_ != null) {
      output.writeMessage(1, getResources());
    }
    if (!getTitleBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessage.writeString(output, 2, title_);
    }
    if (content_ != null) {
      output.writeMessage(3, getContent());
    }
    if (index_ != null) {
      output.writeMessage(4, getIndex());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (resources_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getResources());
    }
    if (!getTitleBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(2, title_);
    }
    if (content_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getContent());
    }
    if (index_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getIndex());
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  public static com.github.jsdossier.proto.HtmlRenderSpec parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.jsdossier.proto.HtmlRenderSpec parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.jsdossier.proto.HtmlRenderSpec parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.jsdossier.proto.HtmlRenderSpec parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.jsdossier.proto.HtmlRenderSpec parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.github.jsdossier.proto.HtmlRenderSpec parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static com.github.jsdossier.proto.HtmlRenderSpec parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static com.github.jsdossier.proto.HtmlRenderSpec parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static com.github.jsdossier.proto.HtmlRenderSpec parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.github.jsdossier.proto.HtmlRenderSpec parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.github.jsdossier.proto.HtmlRenderSpec prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code dossier.HtmlRenderSpec}
   *
   * <pre>
   * Describes how to render a generic HTML page.
   * </pre>
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:dossier.HtmlRenderSpec)
      com.github.jsdossier.proto.HtmlRenderSpecOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jsdossier.proto.Dossier.internal_static_dossier_HtmlRenderSpec_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jsdossier.proto.Dossier.internal_static_dossier_HtmlRenderSpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jsdossier.proto.HtmlRenderSpec.class, com.github.jsdossier.proto.HtmlRenderSpec.Builder.class);
    }

    // Construct using com.github.jsdossier.proto.HtmlRenderSpec.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      if (resourcesBuilder_ == null) {
        resources_ = null;
      } else {
        resources_ = null;
        resourcesBuilder_ = null;
      }
      title_ = "";

      if (contentBuilder_ == null) {
        content_ = null;
      } else {
        content_ = null;
        contentBuilder_ = null;
      }
      if (indexBuilder_ == null) {
        index_ = null;
      } else {
        index_ = null;
        indexBuilder_ = null;
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.github.jsdossier.proto.Dossier.internal_static_dossier_HtmlRenderSpec_descriptor;
    }

    public com.github.jsdossier.proto.HtmlRenderSpec getDefaultInstanceForType() {
      return com.github.jsdossier.proto.HtmlRenderSpec.getDefaultInstance();
    }

    public com.github.jsdossier.proto.HtmlRenderSpec build() {
      com.github.jsdossier.proto.HtmlRenderSpec result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.github.jsdossier.proto.HtmlRenderSpec buildPartial() {
      com.github.jsdossier.proto.HtmlRenderSpec result = new com.github.jsdossier.proto.HtmlRenderSpec(this);
      if (resourcesBuilder_ == null) {
        result.resources_ = resources_;
      } else {
        result.resources_ = resourcesBuilder_.build();
      }
      result.title_ = title_;
      if (contentBuilder_ == null) {
        result.content_ = content_;
      } else {
        result.content_ = contentBuilder_.build();
      }
      if (indexBuilder_ == null) {
        result.index_ = index_;
      } else {
        result.index_ = indexBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.github.jsdossier.proto.HtmlRenderSpec) {
        return mergeFrom((com.github.jsdossier.proto.HtmlRenderSpec)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.github.jsdossier.proto.HtmlRenderSpec other) {
      if (other == com.github.jsdossier.proto.HtmlRenderSpec.getDefaultInstance()) return this;
      if (other.hasResources()) {
        mergeResources(other.getResources());
      }
      if (!other.getTitle().isEmpty()) {
        title_ = other.title_;
        onChanged();
      }
      if (other.hasContent()) {
        mergeContent(other.getContent());
      }
      if (other.hasIndex()) {
        mergeIndex(other.getIndex());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.github.jsdossier.proto.HtmlRenderSpec parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.github.jsdossier.proto.HtmlRenderSpec) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private com.github.jsdossier.proto.Resources resources_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.Resources, com.github.jsdossier.proto.Resources.Builder, com.github.jsdossier.proto.ResourcesOrBuilder> resourcesBuilder_;
    /**
     * <code>optional .dossier.Resources resources = 1;</code>
     *
     * <pre>
     * The resources to include.
     * </pre>
     */
    public boolean hasResources() {
      return resourcesBuilder_ != null || resources_ != null;
    }
    /**
     * <code>optional .dossier.Resources resources = 1;</code>
     *
     * <pre>
     * The resources to include.
     * </pre>
     */
    public com.github.jsdossier.proto.Resources getResources() {
      if (resourcesBuilder_ == null) {
        return resources_ == null ? com.github.jsdossier.proto.Resources.getDefaultInstance() : resources_;
      } else {
        return resourcesBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .dossier.Resources resources = 1;</code>
     *
     * <pre>
     * The resources to include.
     * </pre>
     */
    public Builder setResources(com.github.jsdossier.proto.Resources value) {
      if (resourcesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        resources_ = value;
        onChanged();
      } else {
        resourcesBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .dossier.Resources resources = 1;</code>
     *
     * <pre>
     * The resources to include.
     * </pre>
     */
    public Builder setResources(
        com.github.jsdossier.proto.Resources.Builder builderForValue) {
      if (resourcesBuilder_ == null) {
        resources_ = builderForValue.build();
        onChanged();
      } else {
        resourcesBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .dossier.Resources resources = 1;</code>
     *
     * <pre>
     * The resources to include.
     * </pre>
     */
    public Builder mergeResources(com.github.jsdossier.proto.Resources value) {
      if (resourcesBuilder_ == null) {
        if (resources_ != null) {
          resources_ =
            com.github.jsdossier.proto.Resources.newBuilder(resources_).mergeFrom(value).buildPartial();
        } else {
          resources_ = value;
        }
        onChanged();
      } else {
        resourcesBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .dossier.Resources resources = 1;</code>
     *
     * <pre>
     * The resources to include.
     * </pre>
     */
    public Builder clearResources() {
      if (resourcesBuilder_ == null) {
        resources_ = null;
        onChanged();
      } else {
        resources_ = null;
        resourcesBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .dossier.Resources resources = 1;</code>
     *
     * <pre>
     * The resources to include.
     * </pre>
     */
    public com.github.jsdossier.proto.Resources.Builder getResourcesBuilder() {
      
      onChanged();
      return getResourcesFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .dossier.Resources resources = 1;</code>
     *
     * <pre>
     * The resources to include.
     * </pre>
     */
    public com.github.jsdossier.proto.ResourcesOrBuilder getResourcesOrBuilder() {
      if (resourcesBuilder_ != null) {
        return resourcesBuilder_.getMessageOrBuilder();
      } else {
        return resources_ == null ?
            com.github.jsdossier.proto.Resources.getDefaultInstance() : resources_;
      }
    }
    /**
     * <code>optional .dossier.Resources resources = 1;</code>
     *
     * <pre>
     * The resources to include.
     * </pre>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.Resources, com.github.jsdossier.proto.Resources.Builder, com.github.jsdossier.proto.ResourcesOrBuilder> 
        getResourcesFieldBuilder() {
      if (resourcesBuilder_ == null) {
        resourcesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.jsdossier.proto.Resources, com.github.jsdossier.proto.Resources.Builder, com.github.jsdossier.proto.ResourcesOrBuilder>(
                getResources(),
                getParentForChildren(),
                isClean());
        resources_ = null;
      }
      return resourcesBuilder_;
    }

    private java.lang.Object title_ = "";
    /**
     * <code>optional string title = 2;</code>
     *
     * <pre>
     * The page title.
     * </pre>
     */
    public java.lang.String getTitle() {
      java.lang.Object ref = title_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        title_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>optional string title = 2;</code>
     *
     * <pre>
     * The page title.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTitleBytes() {
      java.lang.Object ref = title_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        title_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string title = 2;</code>
     *
     * <pre>
     * The page title.
     * </pre>
     */
    public Builder setTitle(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      title_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional string title = 2;</code>
     *
     * <pre>
     * The page title.
     * </pre>
     */
    public Builder clearTitle() {
      
      title_ = getDefaultInstance().getTitle();
      onChanged();
      return this;
    }
    /**
     * <code>optional string title = 2;</code>
     *
     * <pre>
     * The page title.
     * </pre>
     */
    public Builder setTitleBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      title_ = value;
      onChanged();
      return this;
    }

    private com.github.jsdossier.proto.Comment content_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.Comment, com.github.jsdossier.proto.Comment.Builder, com.github.jsdossier.proto.CommentOrBuilder> contentBuilder_;
    /**
     * <code>optional .dossier.Comment content = 3;</code>
     *
     * <pre>
     * The page content, if any.
     * </pre>
     */
    public boolean hasContent() {
      return contentBuilder_ != null || content_ != null;
    }
    /**
     * <code>optional .dossier.Comment content = 3;</code>
     *
     * <pre>
     * The page content, if any.
     * </pre>
     */
    public com.github.jsdossier.proto.Comment getContent() {
      if (contentBuilder_ == null) {
        return content_ == null ? com.github.jsdossier.proto.Comment.getDefaultInstance() : content_;
      } else {
        return contentBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .dossier.Comment content = 3;</code>
     *
     * <pre>
     * The page content, if any.
     * </pre>
     */
    public Builder setContent(com.github.jsdossier.proto.Comment value) {
      if (contentBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        content_ = value;
        onChanged();
      } else {
        contentBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .dossier.Comment content = 3;</code>
     *
     * <pre>
     * The page content, if any.
     * </pre>
     */
    public Builder setContent(
        com.github.jsdossier.proto.Comment.Builder builderForValue) {
      if (contentBuilder_ == null) {
        content_ = builderForValue.build();
        onChanged();
      } else {
        contentBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .dossier.Comment content = 3;</code>
     *
     * <pre>
     * The page content, if any.
     * </pre>
     */
    public Builder mergeContent(com.github.jsdossier.proto.Comment value) {
      if (contentBuilder_ == null) {
        if (content_ != null) {
          content_ =
            com.github.jsdossier.proto.Comment.newBuilder(content_).mergeFrom(value).buildPartial();
        } else {
          content_ = value;
        }
        onChanged();
      } else {
        contentBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .dossier.Comment content = 3;</code>
     *
     * <pre>
     * The page content, if any.
     * </pre>
     */
    public Builder clearContent() {
      if (contentBuilder_ == null) {
        content_ = null;
        onChanged();
      } else {
        content_ = null;
        contentBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .dossier.Comment content = 3;</code>
     *
     * <pre>
     * The page content, if any.
     * </pre>
     */
    public com.github.jsdossier.proto.Comment.Builder getContentBuilder() {
      
      onChanged();
      return getContentFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .dossier.Comment content = 3;</code>
     *
     * <pre>
     * The page content, if any.
     * </pre>
     */
    public com.github.jsdossier.proto.CommentOrBuilder getContentOrBuilder() {
      if (contentBuilder_ != null) {
        return contentBuilder_.getMessageOrBuilder();
      } else {
        return content_ == null ?
            com.github.jsdossier.proto.Comment.getDefaultInstance() : content_;
      }
    }
    /**
     * <code>optional .dossier.Comment content = 3;</code>
     *
     * <pre>
     * The page content, if any.
     * </pre>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.Comment, com.github.jsdossier.proto.Comment.Builder, com.github.jsdossier.proto.CommentOrBuilder> 
        getContentFieldBuilder() {
      if (contentBuilder_ == null) {
        contentBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.jsdossier.proto.Comment, com.github.jsdossier.proto.Comment.Builder, com.github.jsdossier.proto.CommentOrBuilder>(
                getContent(),
                getParentForChildren(),
                isClean());
        content_ = null;
      }
      return contentBuilder_;
    }

    private com.github.jsdossier.proto.Index index_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.Index, com.github.jsdossier.proto.Index.Builder, com.github.jsdossier.proto.IndexOrBuilder> indexBuilder_;
    /**
     * <code>optional .dossier.Index index = 4;</code>
     *
     * <pre>
     * Navigation index.
     * </pre>
     */
    public boolean hasIndex() {
      return indexBuilder_ != null || index_ != null;
    }
    /**
     * <code>optional .dossier.Index index = 4;</code>
     *
     * <pre>
     * Navigation index.
     * </pre>
     */
    public com.github.jsdossier.proto.Index getIndex() {
      if (indexBuilder_ == null) {
        return index_ == null ? com.github.jsdossier.proto.Index.getDefaultInstance() : index_;
      } else {
        return indexBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .dossier.Index index = 4;</code>
     *
     * <pre>
     * Navigation index.
     * </pre>
     */
    public Builder setIndex(com.github.jsdossier.proto.Index value) {
      if (indexBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        index_ = value;
        onChanged();
      } else {
        indexBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .dossier.Index index = 4;</code>
     *
     * <pre>
     * Navigation index.
     * </pre>
     */
    public Builder setIndex(
        com.github.jsdossier.proto.Index.Builder builderForValue) {
      if (indexBuilder_ == null) {
        index_ = builderForValue.build();
        onChanged();
      } else {
        indexBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .dossier.Index index = 4;</code>
     *
     * <pre>
     * Navigation index.
     * </pre>
     */
    public Builder mergeIndex(com.github.jsdossier.proto.Index value) {
      if (indexBuilder_ == null) {
        if (index_ != null) {
          index_ =
            com.github.jsdossier.proto.Index.newBuilder(index_).mergeFrom(value).buildPartial();
        } else {
          index_ = value;
        }
        onChanged();
      } else {
        indexBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .dossier.Index index = 4;</code>
     *
     * <pre>
     * Navigation index.
     * </pre>
     */
    public Builder clearIndex() {
      if (indexBuilder_ == null) {
        index_ = null;
        onChanged();
      } else {
        index_ = null;
        indexBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .dossier.Index index = 4;</code>
     *
     * <pre>
     * Navigation index.
     * </pre>
     */
    public com.github.jsdossier.proto.Index.Builder getIndexBuilder() {
      
      onChanged();
      return getIndexFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .dossier.Index index = 4;</code>
     *
     * <pre>
     * Navigation index.
     * </pre>
     */
    public com.github.jsdossier.proto.IndexOrBuilder getIndexOrBuilder() {
      if (indexBuilder_ != null) {
        return indexBuilder_.getMessageOrBuilder();
      } else {
        return index_ == null ?
            com.github.jsdossier.proto.Index.getDefaultInstance() : index_;
      }
    }
    /**
     * <code>optional .dossier.Index index = 4;</code>
     *
     * <pre>
     * Navigation index.
     * </pre>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.Index, com.github.jsdossier.proto.Index.Builder, com.github.jsdossier.proto.IndexOrBuilder> 
        getIndexFieldBuilder() {
      if (indexBuilder_ == null) {
        indexBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.jsdossier.proto.Index, com.github.jsdossier.proto.Index.Builder, com.github.jsdossier.proto.IndexOrBuilder>(
                getIndex(),
                getParentForChildren(),
                isClean());
        index_ = null;
      }
      return indexBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:dossier.HtmlRenderSpec)
  }

  // @@protoc_insertion_point(class_scope:dossier.HtmlRenderSpec)
  private static final com.github.jsdossier.proto.HtmlRenderSpec DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.github.jsdossier.proto.HtmlRenderSpec();
  }

  public static com.github.jsdossier.proto.HtmlRenderSpec getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<HtmlRenderSpec>
      PARSER = new com.google.protobuf.AbstractParser<HtmlRenderSpec>() {
    public HtmlRenderSpec parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      try {
        return new HtmlRenderSpec(input, extensionRegistry);
      } catch (RuntimeException e) {
        if (e.getCause() instanceof
            com.google.protobuf.InvalidProtocolBufferException) {
          throw (com.google.protobuf.InvalidProtocolBufferException)
              e.getCause();
        }
        throw e;
      }
    }
  };

  public static com.google.protobuf.Parser<HtmlRenderSpec> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<HtmlRenderSpec> getParserForType() {
    return PARSER;
  }

  public com.github.jsdossier.proto.HtmlRenderSpec getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

