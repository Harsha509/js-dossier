// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dossier.proto

package com.github.jsdossier.proto;

/**
 * Protobuf type {@code dossier.Deprecation}
 *
 * <pre>
 * Describes a deprecation notice.
 * </pre>
 */
public final class Deprecation extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:dossier.Deprecation)
    DeprecationOrBuilder {
  // Use Deprecation.newBuilder() to construct.
  private Deprecation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
    this.unknownFields = builder.getUnknownFields();
  }
  private Deprecation(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

  private static final Deprecation defaultInstance;
  public static Deprecation getDefaultInstance() {
    return defaultInstance;
  }

  public Deprecation getDefaultInstanceForType() {
    return defaultInstance;
  }

  private final com.google.protobuf.UnknownFieldSet unknownFields;
  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
    return this.unknownFields;
  }
  private Deprecation(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    initFields();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            com.github.jsdossier.proto.Comment.Builder subBuilder = null;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              subBuilder = notice_.toBuilder();
            }
            notice_ = input.readMessage(com.github.jsdossier.proto.Comment.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(notice_);
              notice_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000001;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e.getMessage()).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.github.jsdossier.proto.Dossier.internal_static_dossier_Deprecation_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.github.jsdossier.proto.Dossier.internal_static_dossier_Deprecation_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.github.jsdossier.proto.Deprecation.class, com.github.jsdossier.proto.Deprecation.Builder.class);
  }

  public static com.google.protobuf.Parser<Deprecation> PARSER =
      new com.google.protobuf.AbstractParser<Deprecation>() {
    public Deprecation parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Deprecation(input, extensionRegistry);
    }
  };

  @java.lang.Override
  public com.google.protobuf.Parser<Deprecation> getParserForType() {
    return PARSER;
  }

  private int bitField0_;
  public static final int NOTICE_FIELD_NUMBER = 1;
  private com.github.jsdossier.proto.Comment notice_;
  /**
   * <code>optional .dossier.Comment notice = 1;</code>
   */
  public boolean hasNotice() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <code>optional .dossier.Comment notice = 1;</code>
   */
  public com.github.jsdossier.proto.Comment getNotice() {
    return notice_;
  }
  /**
   * <code>optional .dossier.Comment notice = 1;</code>
   */
  public com.github.jsdossier.proto.CommentOrBuilder getNoticeOrBuilder() {
    return notice_;
  }

  private void initFields() {
    notice_ = com.github.jsdossier.proto.Comment.getDefaultInstance();
  }
  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeMessage(1, notice_);
    }
    getUnknownFields().writeTo(output);
  }

  private int memoizedSerializedSize = -1;
  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, notice_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  protected java.lang.Object writeReplace()
      throws java.io.ObjectStreamException {
    return super.writeReplace();
  }

  public static com.github.jsdossier.proto.Deprecation parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.jsdossier.proto.Deprecation parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.jsdossier.proto.Deprecation parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.jsdossier.proto.Deprecation parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.jsdossier.proto.Deprecation parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.github.jsdossier.proto.Deprecation parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static com.github.jsdossier.proto.Deprecation parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static com.github.jsdossier.proto.Deprecation parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static com.github.jsdossier.proto.Deprecation parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.github.jsdossier.proto.Deprecation parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public static Builder newBuilder() { return Builder.create(); }
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder(com.github.jsdossier.proto.Deprecation prototype) {
    return newBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() { return newBuilder(this); }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code dossier.Deprecation}
   *
   * <pre>
   * Describes a deprecation notice.
   * </pre>
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:dossier.Deprecation)
      com.github.jsdossier.proto.DeprecationOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.jsdossier.proto.Dossier.internal_static_dossier_Deprecation_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.jsdossier.proto.Dossier.internal_static_dossier_Deprecation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.jsdossier.proto.Deprecation.class, com.github.jsdossier.proto.Deprecation.Builder.class);
    }

    // Construct using com.github.jsdossier.proto.Deprecation.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        getNoticeFieldBuilder();
      }
    }
    private static Builder create() {
      return new Builder();
    }

    public Builder clear() {
      super.clear();
      if (noticeBuilder_ == null) {
        notice_ = com.github.jsdossier.proto.Comment.getDefaultInstance();
      } else {
        noticeBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }

    public Builder clone() {
      return create().mergeFrom(buildPartial());
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.github.jsdossier.proto.Dossier.internal_static_dossier_Deprecation_descriptor;
    }

    public com.github.jsdossier.proto.Deprecation getDefaultInstanceForType() {
      return com.github.jsdossier.proto.Deprecation.getDefaultInstance();
    }

    public com.github.jsdossier.proto.Deprecation build() {
      com.github.jsdossier.proto.Deprecation result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.github.jsdossier.proto.Deprecation buildPartial() {
      com.github.jsdossier.proto.Deprecation result = new com.github.jsdossier.proto.Deprecation(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      if (noticeBuilder_ == null) {
        result.notice_ = notice_;
      } else {
        result.notice_ = noticeBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.github.jsdossier.proto.Deprecation) {
        return mergeFrom((com.github.jsdossier.proto.Deprecation)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.github.jsdossier.proto.Deprecation other) {
      if (other == com.github.jsdossier.proto.Deprecation.getDefaultInstance()) return this;
      if (other.hasNotice()) {
        mergeNotice(other.getNotice());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.github.jsdossier.proto.Deprecation parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.github.jsdossier.proto.Deprecation) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.github.jsdossier.proto.Comment notice_ = com.github.jsdossier.proto.Comment.getDefaultInstance();
    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.Comment, com.github.jsdossier.proto.Comment.Builder, com.github.jsdossier.proto.CommentOrBuilder> noticeBuilder_;
    /**
     * <code>optional .dossier.Comment notice = 1;</code>
     */
    public boolean hasNotice() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .dossier.Comment notice = 1;</code>
     */
    public com.github.jsdossier.proto.Comment getNotice() {
      if (noticeBuilder_ == null) {
        return notice_;
      } else {
        return noticeBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .dossier.Comment notice = 1;</code>
     */
    public Builder setNotice(com.github.jsdossier.proto.Comment value) {
      if (noticeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        notice_ = value;
        onChanged();
      } else {
        noticeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <code>optional .dossier.Comment notice = 1;</code>
     */
    public Builder setNotice(
        com.github.jsdossier.proto.Comment.Builder builderForValue) {
      if (noticeBuilder_ == null) {
        notice_ = builderForValue.build();
        onChanged();
      } else {
        noticeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <code>optional .dossier.Comment notice = 1;</code>
     */
    public Builder mergeNotice(com.github.jsdossier.proto.Comment value) {
      if (noticeBuilder_ == null) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            notice_ != com.github.jsdossier.proto.Comment.getDefaultInstance()) {
          notice_ =
            com.github.jsdossier.proto.Comment.newBuilder(notice_).mergeFrom(value).buildPartial();
        } else {
          notice_ = value;
        }
        onChanged();
      } else {
        noticeBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <code>optional .dossier.Comment notice = 1;</code>
     */
    public Builder clearNotice() {
      if (noticeBuilder_ == null) {
        notice_ = com.github.jsdossier.proto.Comment.getDefaultInstance();
        onChanged();
      } else {
        noticeBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }
    /**
     * <code>optional .dossier.Comment notice = 1;</code>
     */
    public com.github.jsdossier.proto.Comment.Builder getNoticeBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getNoticeFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .dossier.Comment notice = 1;</code>
     */
    public com.github.jsdossier.proto.CommentOrBuilder getNoticeOrBuilder() {
      if (noticeBuilder_ != null) {
        return noticeBuilder_.getMessageOrBuilder();
      } else {
        return notice_;
      }
    }
    /**
     * <code>optional .dossier.Comment notice = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.jsdossier.proto.Comment, com.github.jsdossier.proto.Comment.Builder, com.github.jsdossier.proto.CommentOrBuilder> 
        getNoticeFieldBuilder() {
      if (noticeBuilder_ == null) {
        noticeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.jsdossier.proto.Comment, com.github.jsdossier.proto.Comment.Builder, com.github.jsdossier.proto.CommentOrBuilder>(
                getNotice(),
                getParentForChildren(),
                isClean());
        notice_ = null;
      }
      return noticeBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:dossier.Deprecation)
  }

  static {
    defaultInstance = new Deprecation(true);
    defaultInstance.initFields();
  }

  // @@protoc_insertion_point(class_scope:dossier.Deprecation)
}

